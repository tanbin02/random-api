/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 356.0, "minX": 0.0, "maxY": 62202.0, "series": [{"data": [[0.0, 356.0], [0.1, 358.0], [0.2, 358.0], [0.3, 359.0], [0.4, 359.0], [0.5, 359.0], [0.6, 360.0], [0.7, 360.0], [0.8, 360.0], [0.9, 361.0], [1.0, 361.0], [1.1, 361.0], [1.2, 362.0], [1.3, 362.0], [1.4, 362.0], [1.5, 363.0], [1.6, 363.0], [1.7, 363.0], [1.8, 363.0], [1.9, 363.0], [2.0, 364.0], [2.1, 364.0], [2.2, 364.0], [2.3, 364.0], [2.4, 365.0], [2.5, 365.0], [2.6, 365.0], [2.7, 365.0], [2.8, 365.0], [2.9, 365.0], [3.0, 366.0], [3.1, 366.0], [3.2, 366.0], [3.3, 366.0], [3.4, 366.0], [3.5, 366.0], [3.6, 366.0], [3.7, 366.0], [3.8, 366.0], [3.9, 367.0], [4.0, 367.0], [4.1, 367.0], [4.2, 367.0], [4.3, 367.0], [4.4, 367.0], [4.5, 368.0], [4.6, 368.0], [4.7, 368.0], [4.8, 368.0], [4.9, 368.0], [5.0, 368.0], [5.1, 368.0], [5.2, 368.0], [5.3, 368.0], [5.4, 368.0], [5.5, 369.0], [5.6, 369.0], [5.7, 369.0], [5.8, 369.0], [5.9, 369.0], [6.0, 369.0], [6.1, 369.0], [6.2, 370.0], [6.3, 370.0], [6.4, 370.0], [6.5, 370.0], [6.6, 370.0], [6.7, 370.0], [6.8, 370.0], [6.9, 371.0], [7.0, 371.0], [7.1, 371.0], [7.2, 371.0], [7.3, 371.0], [7.4, 371.0], [7.5, 371.0], [7.6, 371.0], [7.7, 372.0], [7.8, 372.0], [7.9, 372.0], [8.0, 372.0], [8.1, 372.0], [8.2, 372.0], [8.3, 372.0], [8.4, 373.0], [8.5, 373.0], [8.6, 373.0], [8.7, 373.0], [8.8, 373.0], [8.9, 373.0], [9.0, 373.0], [9.1, 373.0], [9.2, 373.0], [9.3, 374.0], [9.4, 374.0], [9.5, 374.0], [9.6, 374.0], [9.7, 374.0], [9.8, 374.0], [9.9, 374.0], [10.0, 374.0], [10.1, 374.0], [10.2, 375.0], [10.3, 375.0], [10.4, 375.0], [10.5, 375.0], [10.6, 375.0], [10.7, 375.0], [10.8, 375.0], [10.9, 375.0], [11.0, 375.0], [11.1, 376.0], [11.2, 376.0], [11.3, 376.0], [11.4, 376.0], [11.5, 376.0], [11.6, 376.0], [11.7, 376.0], [11.8, 376.0], [11.9, 376.0], [12.0, 376.0], [12.1, 377.0], [12.2, 377.0], [12.3, 377.0], [12.4, 377.0], [12.5, 377.0], [12.6, 377.0], [12.7, 377.0], [12.8, 377.0], [12.9, 377.0], [13.0, 377.0], [13.1, 377.0], [13.2, 377.0], [13.3, 378.0], [13.4, 378.0], [13.5, 378.0], [13.6, 378.0], [13.7, 378.0], [13.8, 378.0], [13.9, 378.0], [14.0, 378.0], [14.1, 378.0], [14.2, 378.0], [14.3, 378.0], [14.4, 378.0], [14.5, 378.0], [14.6, 378.0], [14.7, 379.0], [14.8, 379.0], [14.9, 379.0], [15.0, 379.0], [15.1, 379.0], [15.2, 379.0], [15.3, 379.0], [15.4, 379.0], [15.5, 379.0], [15.6, 379.0], [15.7, 379.0], [15.8, 379.0], [15.9, 379.0], [16.0, 379.0], [16.1, 379.0], [16.2, 379.0], [16.3, 379.0], [16.4, 379.0], [16.5, 380.0], [16.6, 380.0], [16.7, 380.0], [16.8, 380.0], [16.9, 380.0], [17.0, 380.0], [17.1, 380.0], [17.2, 380.0], [17.3, 380.0], [17.4, 380.0], [17.5, 380.0], [17.6, 380.0], [17.7, 380.0], [17.8, 380.0], [17.9, 380.0], [18.0, 380.0], [18.1, 380.0], [18.2, 380.0], [18.3, 380.0], [18.4, 380.0], [18.5, 380.0], [18.6, 380.0], [18.7, 380.0], [18.8, 381.0], [18.9, 381.0], [19.0, 381.0], [19.1, 381.0], [19.2, 381.0], [19.3, 381.0], [19.4, 381.0], [19.5, 381.0], [19.6, 381.0], [19.7, 381.0], [19.8, 381.0], [19.9, 381.0], [20.0, 381.0], [20.1, 381.0], [20.2, 381.0], [20.3, 381.0], [20.4, 381.0], [20.5, 381.0], [20.6, 381.0], [20.7, 382.0], [20.8, 382.0], [20.9, 382.0], [21.0, 382.0], [21.1, 382.0], [21.2, 382.0], [21.3, 382.0], [21.4, 382.0], [21.5, 382.0], [21.6, 382.0], [21.7, 382.0], [21.8, 382.0], [21.9, 382.0], [22.0, 382.0], [22.1, 382.0], [22.2, 382.0], [22.3, 382.0], [22.4, 382.0], [22.5, 382.0], [22.6, 382.0], [22.7, 382.0], [22.8, 383.0], [22.9, 383.0], [23.0, 383.0], [23.1, 383.0], [23.2, 383.0], [23.3, 383.0], [23.4, 383.0], [23.5, 383.0], [23.6, 383.0], [23.7, 383.0], [23.8, 383.0], [23.9, 383.0], [24.0, 383.0], [24.1, 383.0], [24.2, 383.0], [24.3, 383.0], [24.4, 383.0], [24.5, 383.0], [24.6, 384.0], [24.7, 384.0], [24.8, 384.0], [24.9, 384.0], [25.0, 384.0], [25.1, 384.0], [25.2, 384.0], [25.3, 384.0], [25.4, 384.0], [25.5, 384.0], [25.6, 384.0], [25.7, 384.0], [25.8, 384.0], [25.9, 384.0], [26.0, 384.0], [26.1, 385.0], [26.2, 385.0], [26.3, 385.0], [26.4, 385.0], [26.5, 385.0], [26.6, 385.0], [26.7, 385.0], [26.8, 385.0], [26.9, 385.0], [27.0, 385.0], [27.1, 385.0], [27.2, 385.0], [27.3, 385.0], [27.4, 385.0], [27.5, 385.0], [27.6, 386.0], [27.7, 386.0], [27.8, 386.0], [27.9, 386.0], [28.0, 386.0], [28.1, 386.0], [28.2, 386.0], [28.3, 386.0], [28.4, 386.0], [28.5, 386.0], [28.6, 387.0], [28.7, 387.0], [28.8, 387.0], [28.9, 387.0], [29.0, 387.0], [29.1, 387.0], [29.2, 387.0], [29.3, 387.0], [29.4, 387.0], [29.5, 387.0], [29.6, 388.0], [29.7, 388.0], [29.8, 388.0], [29.9, 388.0], [30.0, 388.0], [30.1, 388.0], [30.2, 388.0], [30.3, 388.0], [30.4, 388.0], [30.5, 388.0], [30.6, 388.0], [30.7, 389.0], [30.8, 389.0], [30.9, 389.0], [31.0, 389.0], [31.1, 389.0], [31.2, 389.0], [31.3, 389.0], [31.4, 389.0], [31.5, 389.0], [31.6, 389.0], [31.7, 389.0], [31.8, 389.0], [31.9, 389.0], [32.0, 390.0], [32.1, 390.0], [32.2, 390.0], [32.3, 390.0], [32.4, 390.0], [32.5, 390.0], [32.6, 390.0], [32.7, 390.0], [32.8, 390.0], [32.9, 390.0], [33.0, 390.0], [33.1, 390.0], [33.2, 390.0], [33.3, 391.0], [33.4, 391.0], [33.5, 391.0], [33.6, 391.0], [33.7, 391.0], [33.8, 391.0], [33.9, 391.0], [34.0, 391.0], [34.1, 391.0], [34.2, 391.0], [34.3, 391.0], [34.4, 391.0], [34.5, 391.0], [34.6, 391.0], [34.7, 391.0], [34.8, 391.0], [34.9, 391.0], [35.0, 391.0], [35.1, 392.0], [35.2, 392.0], [35.3, 392.0], [35.4, 392.0], [35.5, 392.0], [35.6, 392.0], [35.7, 392.0], [35.8, 392.0], [35.9, 392.0], [36.0, 392.0], [36.1, 392.0], [36.2, 392.0], [36.3, 392.0], [36.4, 392.0], [36.5, 392.0], [36.6, 392.0], [36.7, 392.0], [36.8, 392.0], [36.9, 392.0], [37.0, 392.0], [37.1, 393.0], [37.2, 393.0], [37.3, 393.0], [37.4, 393.0], [37.5, 393.0], [37.6, 393.0], [37.7, 393.0], [37.8, 393.0], [37.9, 393.0], [38.0, 393.0], [38.1, 393.0], [38.2, 393.0], [38.3, 393.0], [38.4, 393.0], [38.5, 393.0], [38.6, 393.0], [38.7, 393.0], [38.8, 393.0], [38.9, 393.0], [39.0, 394.0], [39.1, 394.0], [39.2, 394.0], [39.3, 394.0], [39.4, 394.0], [39.5, 394.0], [39.6, 394.0], [39.7, 394.0], [39.8, 394.0], [39.9, 394.0], [40.0, 394.0], [40.1, 394.0], [40.2, 394.0], [40.3, 394.0], [40.4, 394.0], [40.5, 394.0], [40.6, 394.0], [40.7, 394.0], [40.8, 394.0], [40.9, 394.0], [41.0, 394.0], [41.1, 394.0], [41.2, 394.0], [41.3, 395.0], [41.4, 395.0], [41.5, 395.0], [41.6, 395.0], [41.7, 395.0], [41.8, 395.0], [41.9, 395.0], [42.0, 395.0], [42.1, 395.0], [42.2, 395.0], [42.3, 395.0], [42.4, 395.0], [42.5, 395.0], [42.6, 395.0], [42.7, 395.0], [42.8, 395.0], [42.9, 395.0], [43.0, 395.0], [43.1, 395.0], [43.2, 395.0], [43.3, 395.0], [43.4, 395.0], [43.5, 396.0], [43.6, 396.0], [43.7, 396.0], [43.8, 396.0], [43.9, 396.0], [44.0, 396.0], [44.1, 396.0], [44.2, 396.0], [44.3, 396.0], [44.4, 396.0], [44.5, 396.0], [44.6, 396.0], [44.7, 396.0], [44.8, 396.0], [44.9, 396.0], [45.0, 396.0], [45.1, 396.0], [45.2, 397.0], [45.3, 397.0], [45.4, 397.0], [45.5, 397.0], [45.6, 397.0], [45.7, 397.0], [45.8, 397.0], [45.9, 397.0], [46.0, 397.0], [46.1, 397.0], [46.2, 397.0], [46.3, 397.0], [46.4, 397.0], [46.5, 397.0], [46.6, 397.0], [46.7, 397.0], [46.8, 397.0], [46.9, 397.0], [47.0, 398.0], [47.1, 398.0], [47.2, 398.0], [47.3, 398.0], [47.4, 398.0], [47.5, 398.0], [47.6, 398.0], [47.7, 398.0], [47.8, 398.0], [47.9, 398.0], [48.0, 398.0], [48.1, 398.0], [48.2, 398.0], [48.3, 398.0], [48.4, 399.0], [48.5, 399.0], [48.6, 399.0], [48.7, 399.0], [48.8, 399.0], [48.9, 399.0], [49.0, 399.0], [49.1, 399.0], [49.2, 399.0], [49.3, 399.0], [49.4, 399.0], [49.5, 399.0], [49.6, 400.0], [49.7, 400.0], [49.8, 400.0], [49.9, 400.0], [50.0, 400.0], [50.1, 400.0], [50.2, 400.0], [50.3, 400.0], [50.4, 400.0], [50.5, 400.0], [50.6, 400.0], [50.7, 400.0], [50.8, 400.0], [50.9, 400.0], [51.0, 401.0], [51.1, 401.0], [51.2, 401.0], [51.3, 401.0], [51.4, 401.0], [51.5, 401.0], [51.6, 401.0], [51.7, 401.0], [51.8, 401.0], [51.9, 402.0], [52.0, 402.0], [52.1, 402.0], [52.2, 402.0], [52.3, 402.0], [52.4, 402.0], [52.5, 402.0], [52.6, 403.0], [52.7, 403.0], [52.8, 403.0], [52.9, 403.0], [53.0, 403.0], [53.1, 403.0], [53.2, 403.0], [53.3, 403.0], [53.4, 403.0], [53.5, 403.0], [53.6, 403.0], [53.7, 403.0], [53.8, 404.0], [53.9, 404.0], [54.0, 404.0], [54.1, 404.0], [54.2, 404.0], [54.3, 404.0], [54.4, 404.0], [54.5, 404.0], [54.6, 404.0], [54.7, 405.0], [54.8, 405.0], [54.9, 405.0], [55.0, 405.0], [55.1, 405.0], [55.2, 405.0], [55.3, 405.0], [55.4, 405.0], [55.5, 405.0], [55.6, 405.0], [55.7, 406.0], [55.8, 406.0], [55.9, 406.0], [56.0, 406.0], [56.1, 406.0], [56.2, 406.0], [56.3, 406.0], [56.4, 406.0], [56.5, 406.0], [56.6, 406.0], [56.7, 407.0], [56.8, 407.0], [56.9, 407.0], [57.0, 407.0], [57.1, 407.0], [57.2, 407.0], [57.3, 407.0], [57.4, 407.0], [57.5, 407.0], [57.6, 408.0], [57.7, 408.0], [57.8, 408.0], [57.9, 408.0], [58.0, 408.0], [58.1, 408.0], [58.2, 408.0], [58.3, 408.0], [58.4, 409.0], [58.5, 409.0], [58.6, 409.0], [58.7, 409.0], [58.8, 409.0], [58.9, 409.0], [59.0, 410.0], [59.1, 410.0], [59.2, 410.0], [59.3, 410.0], [59.4, 410.0], [59.5, 410.0], [59.6, 410.0], [59.7, 410.0], [59.8, 411.0], [59.9, 411.0], [60.0, 411.0], [60.1, 411.0], [60.2, 411.0], [60.3, 411.0], [60.4, 411.0], [60.5, 412.0], [60.6, 412.0], [60.7, 412.0], [60.8, 412.0], [60.9, 412.0], [61.0, 412.0], [61.1, 413.0], [61.2, 413.0], [61.3, 413.0], [61.4, 413.0], [61.5, 413.0], [61.6, 414.0], [61.7, 414.0], [61.8, 414.0], [61.9, 414.0], [62.0, 414.0], [62.1, 414.0], [62.2, 415.0], [62.3, 415.0], [62.4, 415.0], [62.5, 415.0], [62.6, 415.0], [62.7, 416.0], [62.8, 416.0], [62.9, 416.0], [63.0, 417.0], [63.1, 417.0], [63.2, 417.0], [63.3, 417.0], [63.4, 417.0], [63.5, 418.0], [63.6, 418.0], [63.7, 418.0], [63.8, 418.0], [63.9, 418.0], [64.0, 419.0], [64.1, 419.0], [64.2, 419.0], [64.3, 419.0], [64.4, 420.0], [64.5, 420.0], [64.6, 420.0], [64.7, 420.0], [64.8, 421.0], [64.9, 421.0], [65.0, 421.0], [65.1, 422.0], [65.2, 422.0], [65.3, 422.0], [65.4, 422.0], [65.5, 423.0], [65.6, 423.0], [65.7, 424.0], [65.8, 424.0], [65.9, 424.0], [66.0, 425.0], [66.1, 425.0], [66.2, 426.0], [66.3, 426.0], [66.4, 426.0], [66.5, 427.0], [66.6, 427.0], [66.7, 427.0], [66.8, 428.0], [66.9, 428.0], [67.0, 428.0], [67.1, 429.0], [67.2, 429.0], [67.3, 430.0], [67.4, 430.0], [67.5, 431.0], [67.6, 431.0], [67.7, 431.0], [67.8, 432.0], [67.9, 432.0], [68.0, 432.0], [68.1, 432.0], [68.2, 433.0], [68.3, 433.0], [68.4, 434.0], [68.5, 434.0], [68.6, 435.0], [68.7, 435.0], [68.8, 436.0], [68.9, 437.0], [69.0, 437.0], [69.1, 438.0], [69.2, 438.0], [69.3, 439.0], [69.4, 440.0], [69.5, 440.0], [69.6, 441.0], [69.7, 441.0], [69.8, 442.0], [69.9, 442.0], [70.0, 443.0], [70.1, 443.0], [70.2, 444.0], [70.3, 444.0], [70.4, 445.0], [70.5, 445.0], [70.6, 446.0], [70.7, 447.0], [70.8, 447.0], [70.9, 448.0], [71.0, 448.0], [71.1, 449.0], [71.2, 450.0], [71.3, 451.0], [71.4, 452.0], [71.5, 452.0], [71.6, 453.0], [71.7, 454.0], [71.8, 455.0], [71.9, 455.0], [72.0, 456.0], [72.1, 456.0], [72.2, 457.0], [72.3, 458.0], [72.4, 458.0], [72.5, 459.0], [72.6, 459.0], [72.7, 460.0], [72.8, 461.0], [72.9, 462.0], [73.0, 462.0], [73.1, 464.0], [73.2, 464.0], [73.3, 466.0], [73.4, 467.0], [73.5, 467.0], [73.6, 468.0], [73.7, 470.0], [73.8, 471.0], [73.9, 472.0], [74.0, 473.0], [74.1, 473.0], [74.2, 474.0], [74.3, 475.0], [74.4, 476.0], [74.5, 477.0], [74.6, 479.0], [74.7, 480.0], [74.8, 481.0], [74.9, 482.0], [75.0, 483.0], [75.1, 484.0], [75.2, 485.0], [75.3, 486.0], [75.4, 487.0], [75.5, 488.0], [75.6, 489.0], [75.7, 489.0], [75.8, 491.0], [75.9, 491.0], [76.0, 492.0], [76.1, 492.0], [76.2, 493.0], [76.3, 494.0], [76.4, 495.0], [76.5, 496.0], [76.6, 496.0], [76.7, 497.0], [76.8, 498.0], [76.9, 499.0], [77.0, 500.0], [77.1, 501.0], [77.2, 502.0], [77.3, 503.0], [77.4, 504.0], [77.5, 505.0], [77.6, 507.0], [77.7, 507.0], [77.8, 508.0], [77.9, 509.0], [78.0, 512.0], [78.1, 514.0], [78.2, 514.0], [78.3, 517.0], [78.4, 519.0], [78.5, 520.0], [78.6, 521.0], [78.7, 522.0], [78.8, 524.0], [78.9, 524.0], [79.0, 526.0], [79.1, 529.0], [79.2, 531.0], [79.3, 532.0], [79.4, 533.0], [79.5, 534.0], [79.6, 536.0], [79.7, 537.0], [79.8, 538.0], [79.9, 541.0], [80.0, 542.0], [80.1, 544.0], [80.2, 545.0], [80.3, 547.0], [80.4, 548.0], [80.5, 550.0], [80.6, 551.0], [80.7, 554.0], [80.8, 556.0], [80.9, 558.0], [81.0, 560.0], [81.1, 561.0], [81.2, 562.0], [81.3, 563.0], [81.4, 564.0], [81.5, 568.0], [81.6, 570.0], [81.7, 572.0], [81.8, 574.0], [81.9, 575.0], [82.0, 576.0], [82.1, 578.0], [82.2, 579.0], [82.3, 580.0], [82.4, 583.0], [82.5, 584.0], [82.6, 585.0], [82.7, 587.0], [82.8, 589.0], [82.9, 590.0], [83.0, 591.0], [83.1, 595.0], [83.2, 597.0], [83.3, 598.0], [83.4, 600.0], [83.5, 601.0], [83.6, 602.0], [83.7, 605.0], [83.8, 606.0], [83.9, 607.0], [84.0, 609.0], [84.1, 610.0], [84.2, 612.0], [84.3, 613.0], [84.4, 616.0], [84.5, 618.0], [84.6, 619.0], [84.7, 621.0], [84.8, 623.0], [84.9, 626.0], [85.0, 631.0], [85.1, 635.0], [85.2, 636.0], [85.3, 640.0], [85.4, 643.0], [85.5, 646.0], [85.6, 648.0], [85.7, 651.0], [85.8, 654.0], [85.9, 655.0], [86.0, 660.0], [86.1, 665.0], [86.2, 669.0], [86.3, 673.0], [86.4, 679.0], [86.5, 684.0], [86.6, 688.0], [86.7, 695.0], [86.8, 698.0], [86.9, 702.0], [87.0, 704.0], [87.1, 708.0], [87.2, 711.0], [87.3, 715.0], [87.4, 721.0], [87.5, 729.0], [87.6, 734.0], [87.7, 739.0], [87.8, 743.0], [87.9, 747.0], [88.0, 751.0], [88.1, 756.0], [88.2, 759.0], [88.3, 762.0], [88.4, 775.0], [88.5, 777.0], [88.6, 782.0], [88.7, 788.0], [88.8, 795.0], [88.9, 799.0], [89.0, 803.0], [89.1, 808.0], [89.2, 816.0], [89.3, 820.0], [89.4, 829.0], [89.5, 837.0], [89.6, 842.0], [89.7, 850.0], [89.8, 859.0], [89.9, 865.0], [90.0, 870.0], [90.1, 879.0], [90.2, 887.0], [90.3, 892.0], [90.4, 899.0], [90.5, 904.0], [90.6, 914.0], [90.7, 920.0], [90.8, 931.0], [90.9, 939.0], [91.0, 946.0], [91.1, 954.0], [91.2, 963.0], [91.3, 974.0], [91.4, 981.0], [91.5, 986.0], [91.6, 994.0], [91.7, 1004.0], [91.8, 1009.0], [91.9, 1013.0], [92.0, 1020.0], [92.1, 1029.0], [92.2, 1040.0], [92.3, 1044.0], [92.4, 1049.0], [92.5, 1054.0], [92.6, 1064.0], [92.7, 1075.0], [92.8, 1082.0], [92.9, 1090.0], [93.0, 1100.0], [93.1, 1110.0], [93.2, 1130.0], [93.3, 1144.0], [93.4, 1161.0], [93.5, 1185.0], [93.6, 1208.0], [93.7, 1221.0], [93.8, 1234.0], [93.9, 1257.0], [94.0, 1275.0], [94.1, 1287.0], [94.2, 1294.0], [94.3, 1306.0], [94.4, 1317.0], [94.5, 1334.0], [94.6, 1341.0], [94.7, 1347.0], [94.8, 1361.0], [94.9, 1378.0], [95.0, 1391.0], [95.1, 1399.0], [95.2, 1406.0], [95.3, 1412.0], [95.4, 1420.0], [95.5, 1439.0], [95.6, 1454.0], [95.7, 1464.0], [95.8, 1473.0], [95.9, 1499.0], [96.0, 1520.0], [96.1, 1545.0], [96.2, 1561.0], [96.3, 1594.0], [96.4, 1604.0], [96.5, 1621.0], [96.6, 1643.0], [96.7, 1661.0], [96.8, 1693.0], [96.9, 1721.0], [97.0, 1760.0], [97.1, 1784.0], [97.2, 1831.0], [97.3, 1849.0], [97.4, 1874.0], [97.5, 1906.0], [97.6, 1924.0], [97.7, 1947.0], [97.8, 1981.0], [97.9, 2098.0], [98.0, 2151.0], [98.1, 2196.0], [98.2, 2239.0], [98.3, 2271.0], [98.4, 2365.0], [98.5, 2421.0], [98.6, 2479.0], [98.7, 2567.0], [98.8, 2650.0], [98.9, 2743.0], [99.0, 2864.0], [99.1, 3009.0], [99.2, 3188.0], [99.3, 3379.0], [99.4, 3889.0], [99.5, 4344.0], [99.6, 4644.0], [99.7, 4967.0], [99.8, 5810.0], [99.9, 6278.0]], "isOverall": false, "label": "-0", "isController": false}, {"data": [[0.0, 1132.0], [0.1, 1183.0], [0.2, 1189.0], [0.3, 1195.0], [0.4, 1200.0], [0.5, 1203.0], [0.6, 1205.0], [0.7, 1210.0], [0.8, 1214.0], [0.9, 1217.0], [1.0, 1219.0], [1.1, 1221.0], [1.2, 1223.0], [1.3, 1224.0], [1.4, 1227.0], [1.5, 1229.0], [1.6, 1231.0], [1.7, 1232.0], [1.8, 1234.0], [1.9, 1236.0], [2.0, 1238.0], [2.1, 1239.0], [2.2, 1240.0], [2.3, 1241.0], [2.4, 1244.0], [2.5, 1246.0], [2.6, 1247.0], [2.7, 1248.0], [2.8, 1248.0], [2.9, 1249.0], [3.0, 1250.0], [3.1, 1251.0], [3.2, 1253.0], [3.3, 1254.0], [3.4, 1255.0], [3.5, 1256.0], [3.6, 1258.0], [3.7, 1259.0], [3.8, 1261.0], [3.9, 1262.0], [4.0, 1263.0], [4.1, 1263.0], [4.2, 1265.0], [4.3, 1265.0], [4.4, 1266.0], [4.5, 1267.0], [4.6, 1268.0], [4.7, 1270.0], [4.8, 1271.0], [4.9, 1272.0], [5.0, 1273.0], [5.1, 1274.0], [5.2, 1276.0], [5.3, 1277.0], [5.4, 1279.0], [5.5, 1279.0], [5.6, 1281.0], [5.7, 1282.0], [5.8, 1283.0], [5.9, 1284.0], [6.0, 1285.0], [6.1, 1286.0], [6.2, 1287.0], [6.3, 1289.0], [6.4, 1290.0], [6.5, 1291.0], [6.6, 1294.0], [6.7, 1294.0], [6.8, 1297.0], [6.9, 1297.0], [7.0, 1299.0], [7.1, 1300.0], [7.2, 1301.0], [7.3, 1302.0], [7.4, 1304.0], [7.5, 1304.0], [7.6, 1306.0], [7.7, 1307.0], [7.8, 1307.0], [7.9, 1307.0], [8.0, 1308.0], [8.1, 1309.0], [8.2, 1310.0], [8.3, 1312.0], [8.4, 1313.0], [8.5, 1315.0], [8.6, 1316.0], [8.7, 1317.0], [8.8, 1318.0], [8.9, 1319.0], [9.0, 1321.0], [9.1, 1322.0], [9.2, 1324.0], [9.3, 1324.0], [9.4, 1325.0], [9.5, 1326.0], [9.6, 1327.0], [9.7, 1328.0], [9.8, 1329.0], [9.9, 1330.0], [10.0, 1331.0], [10.1, 1332.0], [10.2, 1334.0], [10.3, 1336.0], [10.4, 1337.0], [10.5, 1339.0], [10.6, 1340.0], [10.7, 1341.0], [10.8, 1343.0], [10.9, 1343.0], [11.0, 1345.0], [11.1, 1346.0], [11.2, 1347.0], [11.3, 1348.0], [11.4, 1349.0], [11.5, 1350.0], [11.6, 1352.0], [11.7, 1353.0], [11.8, 1354.0], [11.9, 1355.0], [12.0, 1357.0], [12.1, 1357.0], [12.2, 1359.0], [12.3, 1360.0], [12.4, 1362.0], [12.5, 1364.0], [12.6, 1364.0], [12.7, 1365.0], [12.8, 1367.0], [12.9, 1369.0], [13.0, 1370.0], [13.1, 1372.0], [13.2, 1373.0], [13.3, 1374.0], [13.4, 1375.0], [13.5, 1377.0], [13.6, 1379.0], [13.7, 1380.0], [13.8, 1382.0], [13.9, 1383.0], [14.0, 1385.0], [14.1, 1386.0], [14.2, 1387.0], [14.3, 1388.0], [14.4, 1389.0], [14.5, 1390.0], [14.6, 1392.0], [14.7, 1394.0], [14.8, 1396.0], [14.9, 1399.0], [15.0, 1400.0], [15.1, 1402.0], [15.2, 1403.0], [15.3, 1405.0], [15.4, 1406.0], [15.5, 1407.0], [15.6, 1409.0], [15.7, 1411.0], [15.8, 1413.0], [15.9, 1413.0], [16.0, 1415.0], [16.1, 1418.0], [16.2, 1421.0], [16.3, 1422.0], [16.4, 1424.0], [16.5, 1426.0], [16.6, 1427.0], [16.7, 1428.0], [16.8, 1430.0], [16.9, 1432.0], [17.0, 1432.0], [17.1, 1434.0], [17.2, 1435.0], [17.3, 1437.0], [17.4, 1438.0], [17.5, 1439.0], [17.6, 1440.0], [17.7, 1441.0], [17.8, 1443.0], [17.9, 1445.0], [18.0, 1446.0], [18.1, 1448.0], [18.2, 1449.0], [18.3, 1451.0], [18.4, 1452.0], [18.5, 1453.0], [18.6, 1455.0], [18.7, 1457.0], [18.8, 1459.0], [18.9, 1460.0], [19.0, 1461.0], [19.1, 1464.0], [19.2, 1465.0], [19.3, 1467.0], [19.4, 1468.0], [19.5, 1469.0], [19.6, 1470.0], [19.7, 1473.0], [19.8, 1475.0], [19.9, 1477.0], [20.0, 1478.0], [20.1, 1480.0], [20.2, 1482.0], [20.3, 1484.0], [20.4, 1486.0], [20.5, 1488.0], [20.6, 1490.0], [20.7, 1493.0], [20.8, 1494.0], [20.9, 1496.0], [21.0, 1498.0], [21.1, 1498.0], [21.2, 1500.0], [21.3, 1501.0], [21.4, 1502.0], [21.5, 1504.0], [21.6, 1505.0], [21.7, 1507.0], [21.8, 1508.0], [21.9, 1510.0], [22.0, 1512.0], [22.1, 1512.0], [22.2, 1516.0], [22.3, 1519.0], [22.4, 1521.0], [22.5, 1523.0], [22.6, 1525.0], [22.7, 1527.0], [22.8, 1529.0], [22.9, 1531.0], [23.0, 1533.0], [23.1, 1535.0], [23.2, 1536.0], [23.3, 1538.0], [23.4, 1541.0], [23.5, 1542.0], [23.6, 1543.0], [23.7, 1545.0], [23.8, 1546.0], [23.9, 1549.0], [24.0, 1551.0], [24.1, 1553.0], [24.2, 1555.0], [24.3, 1556.0], [24.4, 1559.0], [24.5, 1561.0], [24.6, 1563.0], [24.7, 1566.0], [24.8, 1568.0], [24.9, 1569.0], [25.0, 1572.0], [25.1, 1574.0], [25.2, 1576.0], [25.3, 1580.0], [25.4, 1581.0], [25.5, 1582.0], [25.6, 1585.0], [25.7, 1586.0], [25.8, 1589.0], [25.9, 1591.0], [26.0, 1592.0], [26.1, 1593.0], [26.2, 1595.0], [26.3, 1597.0], [26.4, 1600.0], [26.5, 1603.0], [26.6, 1606.0], [26.7, 1609.0], [26.8, 1610.0], [26.9, 1611.0], [27.0, 1613.0], [27.1, 1618.0], [27.2, 1620.0], [27.3, 1623.0], [27.4, 1625.0], [27.5, 1627.0], [27.6, 1631.0], [27.7, 1635.0], [27.8, 1637.0], [27.9, 1641.0], [28.0, 1643.0], [28.1, 1646.0], [28.2, 1648.0], [28.3, 1649.0], [28.4, 1652.0], [28.5, 1656.0], [28.6, 1658.0], [28.7, 1662.0], [28.8, 1665.0], [28.9, 1668.0], [29.0, 1673.0], [29.1, 1674.0], [29.2, 1676.0], [29.3, 1678.0], [29.4, 1679.0], [29.5, 1681.0], [29.6, 1682.0], [29.7, 1688.0], [29.8, 1690.0], [29.9, 1691.0], [30.0, 1694.0], [30.1, 1696.0], [30.2, 1698.0], [30.3, 1700.0], [30.4, 1705.0], [30.5, 1707.0], [30.6, 1710.0], [30.7, 1712.0], [30.8, 1716.0], [30.9, 1717.0], [31.0, 1719.0], [31.1, 1721.0], [31.2, 1725.0], [31.3, 1728.0], [31.4, 1731.0], [31.5, 1733.0], [31.6, 1737.0], [31.7, 1739.0], [31.8, 1742.0], [31.9, 1744.0], [32.0, 1748.0], [32.1, 1750.0], [32.2, 1755.0], [32.3, 1757.0], [32.4, 1758.0], [32.5, 1761.0], [32.6, 1763.0], [32.7, 1765.0], [32.8, 1768.0], [32.9, 1771.0], [33.0, 1773.0], [33.1, 1776.0], [33.2, 1777.0], [33.3, 1782.0], [33.4, 1785.0], [33.5, 1787.0], [33.6, 1789.0], [33.7, 1791.0], [33.8, 1795.0], [33.9, 1798.0], [34.0, 1801.0], [34.1, 1804.0], [34.2, 1808.0], [34.3, 1815.0], [34.4, 1817.0], [34.5, 1820.0], [34.6, 1823.0], [34.7, 1825.0], [34.8, 1829.0], [34.9, 1832.0], [35.0, 1835.0], [35.1, 1840.0], [35.2, 1842.0], [35.3, 1847.0], [35.4, 1850.0], [35.5, 1851.0], [35.6, 1854.0], [35.7, 1855.0], [35.8, 1858.0], [35.9, 1862.0], [36.0, 1867.0], [36.1, 1869.0], [36.2, 1876.0], [36.3, 1878.0], [36.4, 1879.0], [36.5, 1883.0], [36.6, 1886.0], [36.7, 1888.0], [36.8, 1893.0], [36.9, 1896.0], [37.0, 1898.0], [37.1, 1902.0], [37.2, 1904.0], [37.3, 1906.0], [37.4, 1908.0], [37.5, 1912.0], [37.6, 1917.0], [37.7, 1920.0], [37.8, 1924.0], [37.9, 1926.0], [38.0, 1930.0], [38.1, 1933.0], [38.2, 1938.0], [38.3, 1942.0], [38.4, 1945.0], [38.5, 1949.0], [38.6, 1955.0], [38.7, 1960.0], [38.8, 1962.0], [38.9, 1964.0], [39.0, 1966.0], [39.1, 1969.0], [39.2, 1972.0], [39.3, 1981.0], [39.4, 1983.0], [39.5, 1987.0], [39.6, 1993.0], [39.7, 1996.0], [39.8, 2000.0], [39.9, 2005.0], [40.0, 2008.0], [40.1, 2009.0], [40.2, 2011.0], [40.3, 2017.0], [40.4, 2020.0], [40.5, 2024.0], [40.6, 2025.0], [40.7, 2030.0], [40.8, 2031.0], [40.9, 2038.0], [41.0, 2042.0], [41.1, 2046.0], [41.2, 2048.0], [41.3, 2051.0], [41.4, 2054.0], [41.5, 2060.0], [41.6, 2063.0], [41.7, 2065.0], [41.8, 2067.0], [41.9, 2071.0], [42.0, 2074.0], [42.1, 2080.0], [42.2, 2084.0], [42.3, 2086.0], [42.4, 2088.0], [42.5, 2094.0], [42.6, 2097.0], [42.7, 2102.0], [42.8, 2105.0], [42.9, 2110.0], [43.0, 2112.0], [43.1, 2115.0], [43.2, 2119.0], [43.3, 2124.0], [43.4, 2130.0], [43.5, 2134.0], [43.6, 2138.0], [43.7, 2141.0], [43.8, 2145.0], [43.9, 2150.0], [44.0, 2154.0], [44.1, 2160.0], [44.2, 2168.0], [44.3, 2173.0], [44.4, 2178.0], [44.5, 2181.0], [44.6, 2185.0], [44.7, 2187.0], [44.8, 2191.0], [44.9, 2196.0], [45.0, 2198.0], [45.1, 2204.0], [45.2, 2207.0], [45.3, 2212.0], [45.4, 2216.0], [45.5, 2222.0], [45.6, 2225.0], [45.7, 2230.0], [45.8, 2233.0], [45.9, 2235.0], [46.0, 2242.0], [46.1, 2244.0], [46.2, 2247.0], [46.3, 2255.0], [46.4, 2259.0], [46.5, 2265.0], [46.6, 2273.0], [46.7, 2277.0], [46.8, 2281.0], [46.9, 2284.0], [47.0, 2287.0], [47.1, 2291.0], [47.2, 2296.0], [47.3, 2300.0], [47.4, 2303.0], [47.5, 2305.0], [47.6, 2308.0], [47.7, 2314.0], [47.8, 2321.0], [47.9, 2325.0], [48.0, 2329.0], [48.1, 2333.0], [48.2, 2335.0], [48.3, 2342.0], [48.4, 2344.0], [48.5, 2351.0], [48.6, 2358.0], [48.7, 2362.0], [48.8, 2366.0], [48.9, 2371.0], [49.0, 2373.0], [49.1, 2377.0], [49.2, 2381.0], [49.3, 2384.0], [49.4, 2390.0], [49.5, 2393.0], [49.6, 2396.0], [49.7, 2403.0], [49.8, 2404.0], [49.9, 2410.0], [50.0, 2412.0], [50.1, 2418.0], [50.2, 2426.0], [50.3, 2431.0], [50.4, 2437.0], [50.5, 2441.0], [50.6, 2449.0], [50.7, 2456.0], [50.8, 2462.0], [50.9, 2468.0], [51.0, 2471.0], [51.1, 2478.0], [51.2, 2482.0], [51.3, 2486.0], [51.4, 2497.0], [51.5, 2501.0], [51.6, 2508.0], [51.7, 2513.0], [51.8, 2515.0], [51.9, 2522.0], [52.0, 2527.0], [52.1, 2531.0], [52.2, 2540.0], [52.3, 2549.0], [52.4, 2555.0], [52.5, 2561.0], [52.6, 2564.0], [52.7, 2567.0], [52.8, 2571.0], [52.9, 2575.0], [53.0, 2577.0], [53.1, 2582.0], [53.2, 2584.0], [53.3, 2588.0], [53.4, 2591.0], [53.5, 2595.0], [53.6, 2598.0], [53.7, 2606.0], [53.8, 2609.0], [53.9, 2614.0], [54.0, 2619.0], [54.1, 2624.0], [54.2, 2632.0], [54.3, 2635.0], [54.4, 2639.0], [54.5, 2643.0], [54.6, 2647.0], [54.7, 2651.0], [54.8, 2653.0], [54.9, 2659.0], [55.0, 2663.0], [55.1, 2667.0], [55.2, 2671.0], [55.3, 2676.0], [55.4, 2688.0], [55.5, 2692.0], [55.6, 2699.0], [55.7, 2702.0], [55.8, 2706.0], [55.9, 2711.0], [56.0, 2719.0], [56.1, 2725.0], [56.2, 2731.0], [56.3, 2737.0], [56.4, 2746.0], [56.5, 2751.0], [56.6, 2755.0], [56.7, 2762.0], [56.8, 2767.0], [56.9, 2776.0], [57.0, 2780.0], [57.1, 2786.0], [57.2, 2790.0], [57.3, 2794.0], [57.4, 2801.0], [57.5, 2803.0], [57.6, 2807.0], [57.7, 2813.0], [57.8, 2819.0], [57.9, 2830.0], [58.0, 2833.0], [58.1, 2837.0], [58.2, 2845.0], [58.3, 2848.0], [58.4, 2852.0], [58.5, 2854.0], [58.6, 2858.0], [58.7, 2866.0], [58.8, 2870.0], [58.9, 2875.0], [59.0, 2881.0], [59.1, 2884.0], [59.2, 2891.0], [59.3, 2899.0], [59.4, 2901.0], [59.5, 2907.0], [59.6, 2912.0], [59.7, 2916.0], [59.8, 2918.0], [59.9, 2924.0], [60.0, 2930.0], [60.1, 2934.0], [60.2, 2937.0], [60.3, 2947.0], [60.4, 2950.0], [60.5, 2955.0], [60.6, 2966.0], [60.7, 2970.0], [60.8, 2974.0], [60.9, 2980.0], [61.0, 2985.0], [61.1, 2990.0], [61.2, 2998.0], [61.3, 3005.0], [61.4, 3011.0], [61.5, 3016.0], [61.6, 3023.0], [61.7, 3033.0], [61.8, 3040.0], [61.9, 3044.0], [62.0, 3049.0], [62.1, 3055.0], [62.2, 3062.0], [62.3, 3069.0], [62.4, 3076.0], [62.5, 3079.0], [62.6, 3085.0], [62.7, 3094.0], [62.8, 3098.0], [62.9, 3105.0], [63.0, 3107.0], [63.1, 3112.0], [63.2, 3123.0], [63.3, 3126.0], [63.4, 3129.0], [63.5, 3136.0], [63.6, 3140.0], [63.7, 3147.0], [63.8, 3151.0], [63.9, 3157.0], [64.0, 3169.0], [64.1, 3176.0], [64.2, 3181.0], [64.3, 3186.0], [64.4, 3192.0], [64.5, 3195.0], [64.6, 3199.0], [64.7, 3203.0], [64.8, 3208.0], [64.9, 3212.0], [65.0, 3220.0], [65.1, 3231.0], [65.2, 3237.0], [65.3, 3244.0], [65.4, 3252.0], [65.5, 3257.0], [65.6, 3262.0], [65.7, 3271.0], [65.8, 3276.0], [65.9, 3279.0], [66.0, 3284.0], [66.1, 3290.0], [66.2, 3302.0], [66.3, 3305.0], [66.4, 3314.0], [66.5, 3318.0], [66.6, 3327.0], [66.7, 3335.0], [66.8, 3344.0], [66.9, 3348.0], [67.0, 3352.0], [67.1, 3365.0], [67.2, 3371.0], [67.3, 3376.0], [67.4, 3380.0], [67.5, 3383.0], [67.6, 3387.0], [67.7, 3391.0], [67.8, 3401.0], [67.9, 3404.0], [68.0, 3410.0], [68.1, 3416.0], [68.2, 3418.0], [68.3, 3423.0], [68.4, 3432.0], [68.5, 3435.0], [68.6, 3442.0], [68.7, 3450.0], [68.8, 3455.0], [68.9, 3459.0], [69.0, 3467.0], [69.1, 3469.0], [69.2, 3479.0], [69.3, 3483.0], [69.4, 3489.0], [69.5, 3492.0], [69.6, 3495.0], [69.7, 3500.0], [69.8, 3506.0], [69.9, 3512.0], [70.0, 3523.0], [70.1, 3530.0], [70.2, 3542.0], [70.3, 3554.0], [70.4, 3559.0], [70.5, 3569.0], [70.6, 3572.0], [70.7, 3577.0], [70.8, 3589.0], [70.9, 3595.0], [71.0, 3599.0], [71.1, 3607.0], [71.2, 3617.0], [71.3, 3623.0], [71.4, 3629.0], [71.5, 3632.0], [71.6, 3642.0], [71.7, 3652.0], [71.8, 3659.0], [71.9, 3670.0], [72.0, 3675.0], [72.1, 3683.0], [72.2, 3688.0], [72.3, 3697.0], [72.4, 3709.0], [72.5, 3721.0], [72.6, 3728.0], [72.7, 3735.0], [72.8, 3740.0], [72.9, 3748.0], [73.0, 3754.0], [73.1, 3761.0], [73.2, 3768.0], [73.3, 3778.0], [73.4, 3781.0], [73.5, 3783.0], [73.6, 3788.0], [73.7, 3792.0], [73.8, 3796.0], [73.9, 3802.0], [74.0, 3811.0], [74.1, 3823.0], [74.2, 3831.0], [74.3, 3836.0], [74.4, 3843.0], [74.5, 3855.0], [74.6, 3865.0], [74.7, 3876.0], [74.8, 3886.0], [74.9, 3893.0], [75.0, 3900.0], [75.1, 3906.0], [75.2, 3917.0], [75.3, 3924.0], [75.4, 3937.0], [75.5, 3946.0], [75.6, 3958.0], [75.7, 3961.0], [75.8, 3966.0], [75.9, 3974.0], [76.0, 3981.0], [76.1, 3995.0], [76.2, 3998.0], [76.3, 4015.0], [76.4, 4019.0], [76.5, 4030.0], [76.6, 4038.0], [76.7, 4044.0], [76.8, 4059.0], [76.9, 4061.0], [77.0, 4066.0], [77.1, 4072.0], [77.2, 4079.0], [77.3, 4082.0], [77.4, 4090.0], [77.5, 4099.0], [77.6, 4102.0], [77.7, 4109.0], [77.8, 4114.0], [77.9, 4120.0], [78.0, 4130.0], [78.1, 4138.0], [78.2, 4149.0], [78.3, 4157.0], [78.4, 4163.0], [78.5, 4167.0], [78.6, 4179.0], [78.7, 4186.0], [78.8, 4193.0], [78.9, 4207.0], [79.0, 4221.0], [79.1, 4226.0], [79.2, 4235.0], [79.3, 4238.0], [79.4, 4247.0], [79.5, 4256.0], [79.6, 4265.0], [79.7, 4270.0], [79.8, 4283.0], [79.9, 4290.0], [80.0, 4302.0], [80.1, 4315.0], [80.2, 4325.0], [80.3, 4330.0], [80.4, 4337.0], [80.5, 4348.0], [80.6, 4355.0], [80.7, 4360.0], [80.8, 4367.0], [80.9, 4374.0], [81.0, 4380.0], [81.1, 4387.0], [81.2, 4395.0], [81.3, 4409.0], [81.4, 4414.0], [81.5, 4421.0], [81.6, 4428.0], [81.7, 4441.0], [81.8, 4453.0], [81.9, 4460.0], [82.0, 4471.0], [82.1, 4484.0], [82.2, 4496.0], [82.3, 4505.0], [82.4, 4511.0], [82.5, 4537.0], [82.6, 4556.0], [82.7, 4564.0], [82.8, 4580.0], [82.9, 4586.0], [83.0, 4594.0], [83.1, 4616.0], [83.2, 4629.0], [83.3, 4632.0], [83.4, 4643.0], [83.5, 4656.0], [83.6, 4672.0], [83.7, 4682.0], [83.8, 4694.0], [83.9, 4712.0], [84.0, 4726.0], [84.1, 4734.0], [84.2, 4740.0], [84.3, 4748.0], [84.4, 4757.0], [84.5, 4763.0], [84.6, 4772.0], [84.7, 4791.0], [84.8, 4805.0], [84.9, 4812.0], [85.0, 4820.0], [85.1, 4837.0], [85.2, 4854.0], [85.3, 4867.0], [85.4, 4877.0], [85.5, 4889.0], [85.6, 4900.0], [85.7, 4918.0], [85.8, 4930.0], [85.9, 4948.0], [86.0, 4956.0], [86.1, 4969.0], [86.2, 4981.0], [86.3, 4990.0], [86.4, 5003.0], [86.5, 5010.0], [86.6, 5019.0], [86.7, 5032.0], [86.8, 5049.0], [86.9, 5054.0], [87.0, 5067.0], [87.1, 5092.0], [87.2, 5113.0], [87.3, 5133.0], [87.4, 5147.0], [87.5, 5158.0], [87.6, 5166.0], [87.7, 5176.0], [87.8, 5189.0], [87.9, 5207.0], [88.0, 5228.0], [88.1, 5236.0], [88.2, 5255.0], [88.3, 5264.0], [88.4, 5283.0], [88.5, 5294.0], [88.6, 5322.0], [88.7, 5335.0], [88.8, 5351.0], [88.9, 5374.0], [89.0, 5394.0], [89.1, 5403.0], [89.2, 5443.0], [89.3, 5466.0], [89.4, 5486.0], [89.5, 5493.0], [89.6, 5511.0], [89.7, 5529.0], [89.8, 5545.0], [89.9, 5559.0], [90.0, 5571.0], [90.1, 5585.0], [90.2, 5593.0], [90.3, 5611.0], [90.4, 5630.0], [90.5, 5641.0], [90.6, 5650.0], [90.7, 5664.0], [90.8, 5698.0], [90.9, 5715.0], [91.0, 5746.0], [91.1, 5760.0], [91.2, 5774.0], [91.3, 5795.0], [91.4, 5826.0], [91.5, 5864.0], [91.6, 5896.0], [91.7, 5914.0], [91.8, 5938.0], [91.9, 5957.0], [92.0, 5979.0], [92.1, 6000.0], [92.2, 6032.0], [92.3, 6063.0], [92.4, 6102.0], [92.5, 6130.0], [92.6, 6144.0], [92.7, 6176.0], [92.8, 6201.0], [92.9, 6229.0], [93.0, 6281.0], [93.1, 6301.0], [93.2, 6336.0], [93.3, 6407.0], [93.4, 6458.0], [93.5, 6487.0], [93.6, 6532.0], [93.7, 6581.0], [93.8, 6623.0], [93.9, 6719.0], [94.0, 6745.0], [94.1, 6776.0], [94.2, 6856.0], [94.3, 6892.0], [94.4, 6911.0], [94.5, 6933.0], [94.6, 6987.0], [94.7, 7039.0], [94.8, 7065.0], [94.9, 7099.0], [95.0, 7127.0], [95.1, 7167.0], [95.2, 7233.0], [95.3, 7323.0], [95.4, 7353.0], [95.5, 7400.0], [95.6, 7439.0], [95.7, 7534.0], [95.8, 7595.0], [95.9, 7641.0], [96.0, 7691.0], [96.1, 7749.0], [96.2, 7791.0], [96.3, 7886.0], [96.4, 7987.0], [96.5, 8018.0], [96.6, 8083.0], [96.7, 8195.0], [96.8, 8264.0], [96.9, 8332.0], [97.0, 8465.0], [97.1, 8582.0], [97.2, 8611.0], [97.3, 8643.0], [97.4, 8821.0], [97.5, 8878.0], [97.6, 9013.0], [97.7, 9111.0], [97.8, 9197.0], [97.9, 9280.0], [98.0, 9459.0], [98.1, 9567.0], [98.2, 9793.0], [98.3, 10132.0], [98.4, 10407.0], [98.5, 10641.0], [98.6, 10919.0], [98.7, 11263.0], [98.8, 11673.0], [98.9, 12005.0], [99.0, 12549.0], [99.1, 12806.0], [99.2, 13274.0], [99.3, 13709.0], [99.4, 14194.0], [99.5, 14670.0], [99.6, 16322.0], [99.7, 20513.0], [99.8, 41227.0], [99.9, 61206.0]], "isOverall": false, "label": "EMPTY_SERIE_NAME", "isController": false}, {"data": [[0.0, 752.0], [0.1, 801.0], [0.2, 808.0], [0.3, 811.0], [0.4, 815.0], [0.5, 819.0], [0.6, 821.0], [0.7, 824.0], [0.8, 826.0], [0.9, 828.0], [1.0, 829.0], [1.1, 832.0], [1.2, 834.0], [1.3, 836.0], [1.4, 837.0], [1.5, 838.0], [1.6, 839.0], [1.7, 841.0], [1.8, 843.0], [1.9, 845.0], [2.0, 846.0], [2.1, 848.0], [2.2, 849.0], [2.3, 851.0], [2.4, 851.0], [2.5, 852.0], [2.6, 853.0], [2.7, 854.0], [2.8, 855.0], [2.9, 857.0], [3.0, 858.0], [3.1, 859.0], [3.2, 860.0], [3.3, 861.0], [3.4, 862.0], [3.5, 862.0], [3.6, 864.0], [3.7, 864.0], [3.8, 865.0], [3.9, 866.0], [4.0, 867.0], [4.1, 868.0], [4.2, 869.0], [4.3, 869.0], [4.4, 870.0], [4.5, 871.0], [4.6, 873.0], [4.7, 873.0], [4.8, 874.0], [4.9, 875.0], [5.0, 876.0], [5.1, 877.0], [5.2, 878.0], [5.3, 878.0], [5.4, 879.0], [5.5, 880.0], [5.6, 880.0], [5.7, 881.0], [5.8, 882.0], [5.9, 882.0], [6.0, 884.0], [6.1, 884.0], [6.2, 885.0], [6.3, 886.0], [6.4, 887.0], [6.5, 887.0], [6.6, 888.0], [6.7, 889.0], [6.8, 889.0], [6.9, 891.0], [7.0, 892.0], [7.1, 893.0], [7.2, 895.0], [7.3, 896.0], [7.4, 897.0], [7.5, 899.0], [7.6, 900.0], [7.7, 901.0], [7.8, 903.0], [7.9, 904.0], [8.0, 904.0], [8.1, 906.0], [8.2, 907.0], [8.3, 908.0], [8.4, 909.0], [8.5, 910.0], [8.6, 910.0], [8.7, 911.0], [8.8, 912.0], [8.9, 914.0], [9.0, 914.0], [9.1, 915.0], [9.2, 916.0], [9.3, 916.0], [9.4, 918.0], [9.5, 918.0], [9.6, 919.0], [9.7, 920.0], [9.8, 921.0], [9.9, 922.0], [10.0, 923.0], [10.1, 924.0], [10.2, 925.0], [10.3, 926.0], [10.4, 927.0], [10.5, 928.0], [10.6, 929.0], [10.7, 930.0], [10.8, 931.0], [10.9, 932.0], [11.0, 935.0], [11.1, 935.0], [11.2, 936.0], [11.3, 937.0], [11.4, 938.0], [11.5, 939.0], [11.6, 940.0], [11.7, 941.0], [11.8, 941.0], [11.9, 942.0], [12.0, 943.0], [12.1, 946.0], [12.2, 947.0], [12.3, 948.0], [12.4, 949.0], [12.5, 951.0], [12.6, 952.0], [12.7, 953.0], [12.8, 955.0], [12.9, 956.0], [13.0, 958.0], [13.1, 960.0], [13.2, 962.0], [13.3, 963.0], [13.4, 965.0], [13.5, 965.0], [13.6, 967.0], [13.7, 969.0], [13.8, 969.0], [13.9, 972.0], [14.0, 973.0], [14.1, 975.0], [14.2, 976.0], [14.3, 978.0], [14.4, 979.0], [14.5, 980.0], [14.6, 981.0], [14.7, 982.0], [14.8, 983.0], [14.9, 985.0], [15.0, 987.0], [15.1, 988.0], [15.2, 988.0], [15.3, 989.0], [15.4, 990.0], [15.5, 991.0], [15.6, 993.0], [15.7, 995.0], [15.8, 997.0], [15.9, 998.0], [16.0, 1001.0], [16.1, 1003.0], [16.2, 1003.0], [16.3, 1005.0], [16.4, 1007.0], [16.5, 1008.0], [16.6, 1009.0], [16.7, 1010.0], [16.8, 1011.0], [16.9, 1013.0], [17.0, 1014.0], [17.1, 1015.0], [17.2, 1016.0], [17.3, 1018.0], [17.4, 1019.0], [17.5, 1021.0], [17.6, 1023.0], [17.7, 1025.0], [17.8, 1026.0], [17.9, 1029.0], [18.0, 1030.0], [18.1, 1032.0], [18.2, 1033.0], [18.3, 1035.0], [18.4, 1036.0], [18.5, 1037.0], [18.6, 1039.0], [18.7, 1040.0], [18.8, 1042.0], [18.9, 1043.0], [19.0, 1043.0], [19.1, 1044.0], [19.2, 1046.0], [19.3, 1048.0], [19.4, 1049.0], [19.5, 1051.0], [19.6, 1053.0], [19.7, 1054.0], [19.8, 1055.0], [19.9, 1057.0], [20.0, 1059.0], [20.1, 1060.0], [20.2, 1061.0], [20.3, 1062.0], [20.4, 1062.0], [20.5, 1063.0], [20.6, 1064.0], [20.7, 1066.0], [20.8, 1068.0], [20.9, 1069.0], [21.0, 1071.0], [21.1, 1073.0], [21.2, 1074.0], [21.3, 1076.0], [21.4, 1076.0], [21.5, 1078.0], [21.6, 1081.0], [21.7, 1084.0], [21.8, 1085.0], [21.9, 1086.0], [22.0, 1088.0], [22.1, 1088.0], [22.2, 1090.0], [22.3, 1091.0], [22.4, 1092.0], [22.5, 1095.0], [22.6, 1098.0], [22.7, 1100.0], [22.8, 1103.0], [22.9, 1105.0], [23.0, 1107.0], [23.1, 1108.0], [23.2, 1109.0], [23.3, 1111.0], [23.4, 1114.0], [23.5, 1115.0], [23.6, 1116.0], [23.7, 1117.0], [23.8, 1119.0], [23.9, 1123.0], [24.0, 1127.0], [24.1, 1128.0], [24.2, 1129.0], [24.3, 1131.0], [24.4, 1131.0], [24.5, 1133.0], [24.6, 1136.0], [24.7, 1138.0], [24.8, 1139.0], [24.9, 1142.0], [25.0, 1145.0], [25.1, 1146.0], [25.2, 1149.0], [25.3, 1149.0], [25.4, 1153.0], [25.5, 1154.0], [25.6, 1155.0], [25.7, 1157.0], [25.8, 1158.0], [25.9, 1162.0], [26.0, 1164.0], [26.1, 1165.0], [26.2, 1167.0], [26.3, 1169.0], [26.4, 1170.0], [26.5, 1172.0], [26.6, 1175.0], [26.7, 1177.0], [26.8, 1178.0], [26.9, 1179.0], [27.0, 1181.0], [27.1, 1184.0], [27.2, 1188.0], [27.3, 1190.0], [27.4, 1192.0], [27.5, 1195.0], [27.6, 1197.0], [27.7, 1199.0], [27.8, 1202.0], [27.9, 1204.0], [28.0, 1206.0], [28.1, 1208.0], [28.2, 1210.0], [28.3, 1211.0], [28.4, 1214.0], [28.5, 1217.0], [28.6, 1219.0], [28.7, 1221.0], [28.8, 1222.0], [28.9, 1225.0], [29.0, 1227.0], [29.1, 1228.0], [29.2, 1231.0], [29.3, 1233.0], [29.4, 1236.0], [29.5, 1238.0], [29.6, 1240.0], [29.7, 1241.0], [29.8, 1245.0], [29.9, 1246.0], [30.0, 1248.0], [30.1, 1250.0], [30.2, 1255.0], [30.3, 1258.0], [30.4, 1261.0], [30.5, 1263.0], [30.6, 1265.0], [30.7, 1269.0], [30.8, 1271.0], [30.9, 1274.0], [31.0, 1276.0], [31.1, 1278.0], [31.2, 1280.0], [31.3, 1284.0], [31.4, 1285.0], [31.5, 1287.0], [31.6, 1291.0], [31.7, 1292.0], [31.8, 1295.0], [31.9, 1298.0], [32.0, 1300.0], [32.1, 1304.0], [32.2, 1306.0], [32.3, 1311.0], [32.4, 1313.0], [32.5, 1316.0], [32.6, 1320.0], [32.7, 1321.0], [32.8, 1324.0], [32.9, 1327.0], [33.0, 1330.0], [33.1, 1332.0], [33.2, 1333.0], [33.3, 1337.0], [33.4, 1340.0], [33.5, 1342.0], [33.6, 1344.0], [33.7, 1347.0], [33.8, 1349.0], [33.9, 1350.0], [34.0, 1353.0], [34.1, 1358.0], [34.2, 1361.0], [34.3, 1363.0], [34.4, 1364.0], [34.5, 1368.0], [34.6, 1371.0], [34.7, 1374.0], [34.8, 1375.0], [34.9, 1378.0], [35.0, 1379.0], [35.1, 1382.0], [35.2, 1384.0], [35.3, 1386.0], [35.4, 1390.0], [35.5, 1395.0], [35.6, 1398.0], [35.7, 1403.0], [35.8, 1403.0], [35.9, 1404.0], [36.0, 1408.0], [36.1, 1411.0], [36.2, 1412.0], [36.3, 1415.0], [36.4, 1418.0], [36.5, 1420.0], [36.6, 1423.0], [36.7, 1427.0], [36.8, 1434.0], [36.9, 1437.0], [37.0, 1440.0], [37.1, 1442.0], [37.2, 1444.0], [37.3, 1450.0], [37.4, 1453.0], [37.5, 1456.0], [37.6, 1461.0], [37.7, 1462.0], [37.8, 1463.0], [37.9, 1467.0], [38.0, 1470.0], [38.1, 1473.0], [38.2, 1474.0], [38.3, 1477.0], [38.4, 1479.0], [38.5, 1484.0], [38.6, 1487.0], [38.7, 1490.0], [38.8, 1492.0], [38.9, 1496.0], [39.0, 1500.0], [39.1, 1505.0], [39.2, 1511.0], [39.3, 1514.0], [39.4, 1515.0], [39.5, 1517.0], [39.6, 1520.0], [39.7, 1523.0], [39.8, 1526.0], [39.9, 1530.0], [40.0, 1533.0], [40.1, 1540.0], [40.2, 1543.0], [40.3, 1548.0], [40.4, 1549.0], [40.5, 1553.0], [40.6, 1555.0], [40.7, 1558.0], [40.8, 1562.0], [40.9, 1565.0], [41.0, 1568.0], [41.1, 1570.0], [41.2, 1572.0], [41.3, 1577.0], [41.4, 1582.0], [41.5, 1586.0], [41.6, 1590.0], [41.7, 1594.0], [41.8, 1596.0], [41.9, 1600.0], [42.0, 1604.0], [42.1, 1606.0], [42.2, 1609.0], [42.3, 1613.0], [42.4, 1616.0], [42.5, 1622.0], [42.6, 1624.0], [42.7, 1627.0], [42.8, 1629.0], [42.9, 1634.0], [43.0, 1637.0], [43.1, 1641.0], [43.2, 1643.0], [43.3, 1645.0], [43.4, 1650.0], [43.5, 1653.0], [43.6, 1658.0], [43.7, 1661.0], [43.8, 1663.0], [43.9, 1672.0], [44.0, 1676.0], [44.1, 1681.0], [44.2, 1685.0], [44.3, 1688.0], [44.4, 1693.0], [44.5, 1701.0], [44.6, 1703.0], [44.7, 1704.0], [44.8, 1710.0], [44.9, 1715.0], [45.0, 1718.0], [45.1, 1721.0], [45.2, 1724.0], [45.3, 1730.0], [45.4, 1734.0], [45.5, 1743.0], [45.6, 1748.0], [45.7, 1750.0], [45.8, 1756.0], [45.9, 1760.0], [46.0, 1764.0], [46.1, 1768.0], [46.2, 1770.0], [46.3, 1774.0], [46.4, 1775.0], [46.5, 1779.0], [46.6, 1787.0], [46.7, 1793.0], [46.8, 1798.0], [46.9, 1800.0], [47.0, 1803.0], [47.1, 1809.0], [47.2, 1814.0], [47.3, 1816.0], [47.4, 1820.0], [47.5, 1825.0], [47.6, 1829.0], [47.7, 1832.0], [47.8, 1840.0], [47.9, 1845.0], [48.0, 1849.0], [48.1, 1853.0], [48.2, 1855.0], [48.3, 1858.0], [48.4, 1863.0], [48.5, 1868.0], [48.6, 1875.0], [48.7, 1879.0], [48.8, 1882.0], [48.9, 1888.0], [49.0, 1895.0], [49.1, 1899.0], [49.2, 1904.0], [49.3, 1907.0], [49.4, 1911.0], [49.5, 1913.0], [49.6, 1919.0], [49.7, 1925.0], [49.8, 1928.0], [49.9, 1931.0], [50.0, 1938.0], [50.1, 1943.0], [50.2, 1951.0], [50.3, 1957.0], [50.4, 1962.0], [50.5, 1966.0], [50.6, 1970.0], [50.7, 1970.0], [50.8, 1975.0], [50.9, 1982.0], [51.0, 1984.0], [51.1, 1988.0], [51.2, 1992.0], [51.3, 1997.0], [51.4, 2000.0], [51.5, 2008.0], [51.6, 2011.0], [51.7, 2015.0], [51.8, 2020.0], [51.9, 2026.0], [52.0, 2034.0], [52.1, 2038.0], [52.2, 2045.0], [52.3, 2049.0], [52.4, 2054.0], [52.5, 2059.0], [52.6, 2062.0], [52.7, 2070.0], [52.8, 2074.0], [52.9, 2081.0], [53.0, 2083.0], [53.1, 2087.0], [53.2, 2091.0], [53.3, 2095.0], [53.4, 2099.0], [53.5, 2106.0], [53.6, 2115.0], [53.7, 2120.0], [53.8, 2123.0], [53.9, 2127.0], [54.0, 2130.0], [54.1, 2134.0], [54.2, 2141.0], [54.3, 2145.0], [54.4, 2151.0], [54.5, 2155.0], [54.6, 2162.0], [54.7, 2165.0], [54.8, 2169.0], [54.9, 2174.0], [55.0, 2181.0], [55.1, 2187.0], [55.2, 2191.0], [55.3, 2196.0], [55.4, 2201.0], [55.5, 2203.0], [55.6, 2207.0], [55.7, 2210.0], [55.8, 2214.0], [55.9, 2220.0], [56.0, 2230.0], [56.1, 2234.0], [56.2, 2239.0], [56.3, 2242.0], [56.4, 2248.0], [56.5, 2251.0], [56.6, 2255.0], [56.7, 2257.0], [56.8, 2261.0], [56.9, 2268.0], [57.0, 2271.0], [57.1, 2278.0], [57.2, 2283.0], [57.3, 2288.0], [57.4, 2292.0], [57.5, 2297.0], [57.6, 2305.0], [57.7, 2314.0], [57.8, 2318.0], [57.9, 2322.0], [58.0, 2326.0], [58.1, 2331.0], [58.2, 2339.0], [58.3, 2344.0], [58.4, 2347.0], [58.5, 2350.0], [58.6, 2361.0], [58.7, 2364.0], [58.8, 2370.0], [58.9, 2374.0], [59.0, 2378.0], [59.1, 2385.0], [59.2, 2388.0], [59.3, 2389.0], [59.4, 2392.0], [59.5, 2400.0], [59.6, 2405.0], [59.7, 2408.0], [59.8, 2412.0], [59.9, 2414.0], [60.0, 2416.0], [60.1, 2425.0], [60.2, 2431.0], [60.3, 2436.0], [60.4, 2439.0], [60.5, 2442.0], [60.6, 2449.0], [60.7, 2454.0], [60.8, 2459.0], [60.9, 2466.0], [61.0, 2469.0], [61.1, 2474.0], [61.2, 2482.0], [61.3, 2487.0], [61.4, 2492.0], [61.5, 2499.0], [61.6, 2502.0], [61.7, 2509.0], [61.8, 2514.0], [61.9, 2519.0], [62.0, 2525.0], [62.1, 2529.0], [62.2, 2531.0], [62.3, 2537.0], [62.4, 2543.0], [62.5, 2547.0], [62.6, 2553.0], [62.7, 2562.0], [62.8, 2570.0], [62.9, 2579.0], [63.0, 2584.0], [63.1, 2589.0], [63.2, 2596.0], [63.3, 2603.0], [63.4, 2611.0], [63.5, 2617.0], [63.6, 2625.0], [63.7, 2633.0], [63.8, 2642.0], [63.9, 2648.0], [64.0, 2652.0], [64.1, 2659.0], [64.2, 2664.0], [64.3, 2670.0], [64.4, 2675.0], [64.5, 2680.0], [64.6, 2686.0], [64.7, 2690.0], [64.8, 2696.0], [64.9, 2701.0], [65.0, 2706.0], [65.1, 2714.0], [65.2, 2718.0], [65.3, 2723.0], [65.4, 2730.0], [65.5, 2734.0], [65.6, 2738.0], [65.7, 2743.0], [65.8, 2749.0], [65.9, 2756.0], [66.0, 2763.0], [66.1, 2772.0], [66.2, 2781.0], [66.3, 2786.0], [66.4, 2790.0], [66.5, 2793.0], [66.6, 2798.0], [66.7, 2804.0], [66.8, 2806.0], [66.9, 2812.0], [67.0, 2815.0], [67.1, 2825.0], [67.2, 2830.0], [67.3, 2836.0], [67.4, 2843.0], [67.5, 2849.0], [67.6, 2858.0], [67.7, 2867.0], [67.8, 2872.0], [67.9, 2878.0], [68.0, 2885.0], [68.1, 2889.0], [68.2, 2893.0], [68.3, 2902.0], [68.4, 2909.0], [68.5, 2923.0], [68.6, 2925.0], [68.7, 2927.0], [68.8, 2935.0], [68.9, 2945.0], [69.0, 2949.0], [69.1, 2952.0], [69.2, 2957.0], [69.3, 2961.0], [69.4, 2967.0], [69.5, 2971.0], [69.6, 2976.0], [69.7, 2980.0], [69.8, 2989.0], [69.9, 2997.0], [70.0, 3004.0], [70.1, 3009.0], [70.2, 3013.0], [70.3, 3016.0], [70.4, 3023.0], [70.5, 3027.0], [70.6, 3030.0], [70.7, 3037.0], [70.8, 3041.0], [70.9, 3045.0], [71.0, 3051.0], [71.1, 3056.0], [71.2, 3065.0], [71.3, 3071.0], [71.4, 3081.0], [71.5, 3086.0], [71.6, 3090.0], [71.7, 3094.0], [71.8, 3103.0], [71.9, 3108.0], [72.0, 3114.0], [72.1, 3123.0], [72.2, 3132.0], [72.3, 3137.0], [72.4, 3146.0], [72.5, 3151.0], [72.6, 3162.0], [72.7, 3166.0], [72.8, 3174.0], [72.9, 3180.0], [73.0, 3183.0], [73.1, 3187.0], [73.2, 3193.0], [73.3, 3199.0], [73.4, 3206.0], [73.5, 3213.0], [73.6, 3218.0], [73.7, 3229.0], [73.8, 3237.0], [73.9, 3243.0], [74.0, 3248.0], [74.1, 3255.0], [74.2, 3258.0], [74.3, 3262.0], [74.4, 3273.0], [74.5, 3280.0], [74.6, 3285.0], [74.7, 3291.0], [74.8, 3298.0], [74.9, 3308.0], [75.0, 3316.0], [75.1, 3323.0], [75.2, 3333.0], [75.3, 3340.0], [75.4, 3349.0], [75.5, 3356.0], [75.6, 3361.0], [75.7, 3363.0], [75.8, 3370.0], [75.9, 3379.0], [76.0, 3384.0], [76.1, 3391.0], [76.2, 3397.0], [76.3, 3404.0], [76.4, 3408.0], [76.5, 3411.0], [76.6, 3416.0], [76.7, 3423.0], [76.8, 3429.0], [76.9, 3440.0], [77.0, 3449.0], [77.1, 3454.0], [77.2, 3456.0], [77.3, 3463.0], [77.4, 3472.0], [77.5, 3477.0], [77.6, 3486.0], [77.7, 3494.0], [77.8, 3497.0], [77.9, 3510.0], [78.0, 3525.0], [78.1, 3532.0], [78.2, 3541.0], [78.3, 3551.0], [78.4, 3562.0], [78.5, 3570.0], [78.6, 3576.0], [78.7, 3586.0], [78.8, 3597.0], [78.9, 3602.0], [79.0, 3611.0], [79.1, 3620.0], [79.2, 3623.0], [79.3, 3632.0], [79.4, 3646.0], [79.5, 3652.0], [79.6, 3656.0], [79.7, 3661.0], [79.8, 3667.0], [79.9, 3674.0], [80.0, 3680.0], [80.1, 3685.0], [80.2, 3690.0], [80.3, 3698.0], [80.4, 3704.0], [80.5, 3708.0], [80.6, 3715.0], [80.7, 3723.0], [80.8, 3734.0], [80.9, 3742.0], [81.0, 3748.0], [81.1, 3757.0], [81.2, 3761.0], [81.3, 3773.0], [81.4, 3780.0], [81.5, 3785.0], [81.6, 3792.0], [81.7, 3800.0], [81.8, 3805.0], [81.9, 3811.0], [82.0, 3822.0], [82.1, 3833.0], [82.2, 3842.0], [82.3, 3849.0], [82.4, 3857.0], [82.5, 3866.0], [82.6, 3869.0], [82.7, 3884.0], [82.8, 3891.0], [82.9, 3898.0], [83.0, 3909.0], [83.1, 3914.0], [83.2, 3925.0], [83.3, 3934.0], [83.4, 3944.0], [83.5, 3954.0], [83.6, 3967.0], [83.7, 3974.0], [83.8, 3982.0], [83.9, 3989.0], [84.0, 4005.0], [84.1, 4014.0], [84.2, 4021.0], [84.3, 4030.0], [84.4, 4051.0], [84.5, 4057.0], [84.6, 4069.0], [84.7, 4081.0], [84.8, 4095.0], [84.9, 4107.0], [85.0, 4116.0], [85.1, 4133.0], [85.2, 4152.0], [85.3, 4156.0], [85.4, 4165.0], [85.5, 4177.0], [85.6, 4184.0], [85.7, 4187.0], [85.8, 4204.0], [85.9, 4217.0], [86.0, 4235.0], [86.1, 4247.0], [86.2, 4258.0], [86.3, 4269.0], [86.4, 4286.0], [86.5, 4301.0], [86.6, 4329.0], [86.7, 4338.0], [86.8, 4348.0], [86.9, 4357.0], [87.0, 4372.0], [87.1, 4381.0], [87.2, 4397.0], [87.3, 4406.0], [87.4, 4420.0], [87.5, 4430.0], [87.6, 4449.0], [87.7, 4457.0], [87.8, 4463.0], [87.9, 4475.0], [88.0, 4484.0], [88.1, 4505.0], [88.2, 4526.0], [88.3, 4546.0], [88.4, 4556.0], [88.5, 4581.0], [88.6, 4599.0], [88.7, 4605.0], [88.8, 4629.0], [88.9, 4636.0], [89.0, 4646.0], [89.1, 4675.0], [89.2, 4690.0], [89.3, 4720.0], [89.4, 4739.0], [89.5, 4762.0], [89.6, 4780.0], [89.7, 4784.0], [89.8, 4795.0], [89.9, 4806.0], [90.0, 4822.0], [90.1, 4838.0], [90.2, 4869.0], [90.3, 4878.0], [90.4, 4907.0], [90.5, 4927.0], [90.6, 4941.0], [90.7, 4953.0], [90.8, 4970.0], [90.9, 4992.0], [91.0, 4999.0], [91.1, 5008.0], [91.2, 5029.0], [91.3, 5050.0], [91.4, 5069.0], [91.5, 5081.0], [91.6, 5097.0], [91.7, 5109.0], [91.8, 5133.0], [91.9, 5162.0], [92.0, 5187.0], [92.1, 5204.0], [92.2, 5231.0], [92.3, 5240.0], [92.4, 5255.0], [92.5, 5267.0], [92.6, 5289.0], [92.7, 5309.0], [92.8, 5332.0], [92.9, 5352.0], [93.0, 5374.0], [93.1, 5396.0], [93.2, 5438.0], [93.3, 5474.0], [93.4, 5538.0], [93.5, 5548.0], [93.6, 5583.0], [93.7, 5637.0], [93.8, 5704.0], [93.9, 5737.0], [94.0, 5772.0], [94.1, 5819.0], [94.2, 5862.0], [94.3, 5881.0], [94.4, 5921.0], [94.5, 5971.0], [94.6, 6010.0], [94.7, 6083.0], [94.8, 6145.0], [94.9, 6258.0], [95.0, 6304.0], [95.1, 6342.0], [95.2, 6384.0], [95.3, 6417.0], [95.4, 6476.0], [95.5, 6520.0], [95.6, 6563.0], [95.7, 6603.0], [95.8, 6683.0], [95.9, 6719.0], [96.0, 6762.0], [96.1, 6838.0], [96.2, 6937.0], [96.3, 7000.0], [96.4, 7035.0], [96.5, 7124.0], [96.6, 7201.0], [96.7, 7231.0], [96.8, 7311.0], [96.9, 7331.0], [97.0, 7377.0], [97.1, 7439.0], [97.2, 7491.0], [97.3, 7606.0], [97.4, 7655.0], [97.5, 7727.0], [97.6, 7793.0], [97.7, 7857.0], [97.8, 7930.0], [97.9, 8040.0], [98.0, 8076.0], [98.1, 8220.0], [98.2, 8260.0], [98.3, 8337.0], [98.4, 8408.0], [98.5, 8465.0], [98.6, 8561.0], [98.7, 8675.0], [98.8, 8797.0], [98.9, 9003.0], [99.0, 9104.0], [99.1, 9417.0], [99.2, 9764.0], [99.3, 10829.0], [99.4, 11333.0], [99.5, 12077.0], [99.6, 13840.0], [99.7, 20064.0], [99.8, 40811.0], [99.9, 60585.0]], "isOverall": false, "label": "-1", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 300.0, "maxY": 2973.0, "series": [{"data": [[600.0, 208.0], [700.0, 124.0], [800.0, 91.0], [900.0, 74.0], [1000.0, 80.0], [1100.0, 36.0], [1200.0, 39.0], [1300.0, 52.0], [1400.0, 49.0], [1500.0, 26.0], [1600.0, 28.0], [1700.0, 19.0], [1800.0, 19.0], [1900.0, 23.0], [2000.0, 4.0], [2100.0, 12.0], [2300.0, 7.0], [2200.0, 16.0], [2400.0, 8.0], [2500.0, 7.0], [2600.0, 7.0], [2800.0, 6.0], [2700.0, 5.0], [2900.0, 2.0], [3000.0, 4.0], [3100.0, 4.0], [3200.0, 1.0], [3300.0, 5.0], [3400.0, 1.0], [3500.0, 1.0], [3700.0, 2.0], [3800.0, 2.0], [4000.0, 1.0], [4100.0, 2.0], [4300.0, 2.0], [4200.0, 2.0], [4500.0, 2.0], [4400.0, 2.0], [4600.0, 2.0], [4800.0, 1.0], [4900.0, 4.0], [5100.0, 2.0], [5600.0, 2.0], [5400.0, 1.0], [5800.0, 1.0], [5900.0, 3.0], [6300.0, 2.0], [6200.0, 3.0], [6500.0, 2.0], [6800.0, 1.0], [300.0, 2973.0], [400.0, 1647.0], [500.0, 383.0]], "isOverall": false, "label": "-0", "isController": false}, {"data": [[34500.0, 1.0], [52500.0, 1.0], [61300.0, 1.0], [61500.0, 1.0], [1100.0, 23.0], [1200.0, 402.0], [1300.0, 471.0], [1400.0, 375.0], [1500.0, 312.0], [1600.0, 232.0], [1700.0, 221.0], [1800.0, 187.0], [1900.0, 165.0], [2000.0, 174.0], [2100.0, 140.0], [2300.0, 141.0], [2200.0, 135.0], [2400.0, 109.0], [2500.0, 130.0], [2600.0, 122.0], [2800.0, 117.0], [2700.0, 105.0], [2900.0, 114.0], [3000.0, 94.0], [3100.0, 110.0], [3300.0, 94.0], [3200.0, 93.0], [3400.0, 116.0], [3500.0, 79.0], [3600.0, 79.0], [3700.0, 91.0], [3800.0, 69.0], [3900.0, 73.0], [4000.0, 78.0], [4100.0, 81.0], [4300.0, 77.0], [4200.0, 67.0], [4400.0, 60.0], [4600.0, 46.0], [4500.0, 48.0], [4800.0, 50.0], [4700.0, 56.0], [5100.0, 41.0], [5000.0, 47.0], [4900.0, 47.0], [5200.0, 40.0], [5300.0, 33.0], [5500.0, 41.0], [5600.0, 34.0], [5400.0, 30.0], [5700.0, 31.0], [5800.0, 18.0], [6100.0, 24.0], [5900.0, 28.0], [6000.0, 18.0], [6200.0, 18.0], [6300.0, 11.0], [6400.0, 16.0], [6500.0, 12.0], [6600.0, 8.0], [6800.0, 12.0], [6900.0, 18.0], [6700.0, 15.0], [7100.0, 14.0], [7000.0, 17.0], [7300.0, 14.0], [7200.0, 7.0], [7400.0, 10.0], [7500.0, 9.0], [7600.0, 13.0], [7800.0, 6.0], [7700.0, 11.0], [7900.0, 7.0], [8000.0, 11.0], [8100.0, 6.0], [8600.0, 10.0], [8200.0, 7.0], [8500.0, 8.0], [8400.0, 4.0], [8700.0, 4.0], [8300.0, 8.0], [8800.0, 8.0], [9200.0, 6.0], [9000.0, 6.0], [9100.0, 7.0], [8900.0, 4.0], [9500.0, 4.0], [9400.0, 8.0], [9700.0, 3.0], [9300.0, 2.0], [9600.0, 1.0], [9800.0, 3.0], [10100.0, 3.0], [9900.0, 1.0], [10000.0, 1.0], [10600.0, 5.0], [10700.0, 1.0], [10400.0, 3.0], [10300.0, 3.0], [10500.0, 2.0], [10900.0, 2.0], [11100.0, 2.0], [11200.0, 3.0], [10800.0, 1.0], [11700.0, 4.0], [11300.0, 1.0], [11400.0, 1.0], [11500.0, 3.0], [11600.0, 1.0], [12200.0, 1.0], [12000.0, 2.0], [11900.0, 1.0], [12100.0, 1.0], [12500.0, 4.0], [12400.0, 1.0], [12600.0, 3.0], [13200.0, 2.0], [12900.0, 3.0], [12800.0, 1.0], [13000.0, 1.0], [13400.0, 2.0], [13800.0, 3.0], [13700.0, 2.0], [13600.0, 2.0], [13500.0, 1.0], [14200.0, 2.0], [14100.0, 1.0], [13900.0, 1.0], [14600.0, 2.0], [14700.0, 1.0], [14500.0, 2.0], [14900.0, 1.0], [15300.0, 1.0], [15000.0, 1.0], [15600.0, 1.0], [16300.0, 1.0], [17000.0, 1.0], [18500.0, 1.0], [18900.0, 1.0], [19600.0, 1.0], [20500.0, 2.0], [22300.0, 1.0], [24500.0, 1.0], [35200.0, 1.0], [38400.0, 1.0], [41200.0, 1.0], [51000.0, 1.0], [51200.0, 1.0], [53400.0, 1.0], [61200.0, 1.0], [60800.0, 1.0], [62200.0, 1.0], [61800.0, 1.0], [62000.0, 1.0]], "isOverall": false, "label": "EMPTY_SERIE_NAME", "isController": false}, {"data": [[50500.0, 1.0], [52100.0, 1.0], [60500.0, 2.0], [60300.0, 1.0], [60900.0, 1.0], [700.0, 5.0], [800.0, 450.0], [900.0, 504.0], [1000.0, 402.0], [1100.0, 302.0], [1200.0, 255.0], [1300.0, 221.0], [1400.0, 201.0], [1500.0, 174.0], [1600.0, 153.0], [1700.0, 144.0], [1800.0, 136.0], [1900.0, 137.0], [2000.0, 122.0], [2100.0, 117.0], [2300.0, 118.0], [2200.0, 129.0], [2400.0, 121.0], [2500.0, 104.0], [2600.0, 98.0], [2800.0, 100.0], [2700.0, 104.0], [2900.0, 101.0], [3000.0, 106.0], [3100.0, 95.0], [3200.0, 90.0], [3300.0, 84.0], [3400.0, 98.0], [3500.0, 61.0], [3700.0, 82.0], [3600.0, 87.0], [3800.0, 75.0], [3900.0, 64.0], [4000.0, 50.0], [4200.0, 43.0], [4300.0, 45.0], [4100.0, 57.0], [4400.0, 50.0], [4500.0, 34.0], [4600.0, 36.0], [4700.0, 37.0], [4800.0, 31.0], [5000.0, 38.0], [5100.0, 27.0], [4900.0, 38.0], [5300.0, 28.0], [5200.0, 34.0], [5500.0, 19.0], [5400.0, 11.0], [5600.0, 10.0], [5800.0, 16.0], [5700.0, 17.0], [6000.0, 10.0], [5900.0, 14.0], [6100.0, 8.0], [6300.0, 16.0], [6200.0, 7.0], [6400.0, 11.0], [6600.0, 9.0], [6500.0, 15.0], [6700.0, 14.0], [6900.0, 9.0], [6800.0, 4.0], [7100.0, 6.0], [7000.0, 12.0], [7200.0, 11.0], [7300.0, 18.0], [7400.0, 8.0], [7600.0, 11.0], [7500.0, 5.0], [7800.0, 9.0], [7700.0, 8.0], [7900.0, 7.0], [8000.0, 9.0], [8100.0, 4.0], [8400.0, 9.0], [8200.0, 12.0], [8500.0, 7.0], [8600.0, 5.0], [8300.0, 5.0], [8700.0, 5.0], [8800.0, 3.0], [9200.0, 2.0], [9000.0, 6.0], [9100.0, 3.0], [8900.0, 2.0], [9500.0, 1.0], [9300.0, 1.0], [9600.0, 3.0], [9400.0, 1.0], [9700.0, 2.0], [10100.0, 1.0], [10200.0, 1.0], [10000.0, 1.0], [10500.0, 2.0], [11100.0, 3.0], [10900.0, 1.0], [10800.0, 1.0], [11200.0, 1.0], [11400.0, 1.0], [11300.0, 1.0], [11600.0, 1.0], [12100.0, 2.0], [11800.0, 1.0], [12000.0, 3.0], [12800.0, 1.0], [13000.0, 1.0], [13300.0, 1.0], [13800.0, 1.0], [14100.0, 1.0], [18100.0, 1.0], [18200.0, 1.0], [19200.0, 1.0], [19100.0, 1.0], [20000.0, 1.0], [21800.0, 1.0], [23400.0, 1.0], [34200.0, 1.0], [34800.0, 1.0], [37600.0, 1.0], [40800.0, 1.0], [50000.0, 1.0], [52000.0, 1.0], [60800.0, 1.0], [61400.0, 1.0], [61800.0, 1.0]], "isOverall": false, "label": "-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 62200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 16.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 8616.0, "series": [{"data": [[0.0, 4623.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 4745.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 8616.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 16.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 5.633333333333336, "minX": 1.71838512E12, "maxY": 28.643103448275863, "series": [{"data": [[1.71838596E12, 6.064891846921797], [1.71838566E12, 19.4278846153846], [1.71838656E12, 17.83584589614739], [1.71838626E12, 11.39658119658119], [1.71838668E12, 13.215654952076685], [1.71838536E12, 8.306055646481187], [1.71838638E12, 7.801666666666666], [1.71838548E12, 9.713559322033904], [1.71838518E12, 13.566225165562912], [1.71838608E12, 6.207516339869282], [1.71838578E12, 5.633333333333336], [1.7183862E12, 14.644588045234233], [1.7183859E12, 6.708126036484245], [1.7183868E12, 11.095400340715498], [1.7183865E12, 9.072289156626518], [1.7183853E12, 8.268907563025214], [1.71838692E12, 17.192612137203177], [1.71838662E12, 21.3372881355932], [1.7183856E12, 28.643103448275863], [1.71838572E12, 7.101612903225807], [1.71838542E12, 7.023294509151407], [1.71838632E12, 13.043973941368064], [1.71838602E12, 10.11433447098976], [1.71838644E12, 6.727574750830562], [1.71838512E12, 8.82677165354331], [1.71838614E12, 8.555938037865744], [1.71838674E12, 8.161616161616154], [1.71838686E12, 15.039723661485311], [1.71838584E12, 8.287625418060202], [1.71838524E12, 8.441127694859043], [1.71838554E12, 9.695205479452051]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71838692E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 400.6911369740373, "minX": 3.0, "maxY": 15429.0, "series": [{"data": [[3.0, 684.3333333333334], [4.0, 473.5161290322581], [5.0, 400.6911369740373], [6.0, 444.233962264151], [7.0, 460.91347753743815], [8.0, 466.39310344827584], [9.0, 483.7710144927534], [10.0, 482.3689320388348], [11.0, 483.7388316151202], [12.0, 526.2769230769231], [13.0, 519.2533936651583], [14.0, 551.1632653061228], [15.0, 616.2039800995027], [16.0, 709.7102272727277], [17.0, 760.1007194244607], [18.0, 774.669642857143], [19.0, 963.3882352941174], [20.0, 1025.573333333333], [21.0, 943.3617021276598], [22.0, 791.4318181818182], [23.0, 826.404255319149], [24.0, 710.509090909091], [25.0, 683.5185185185186], [26.0, 792.875], [27.0, 931.7407407407406], [28.0, 708.9487179487181], [29.0, 726.6285714285715], [30.0, 827.7555555555555], [31.0, 638.611111111111], [33.0, 675.1499999999999], [32.0, 668.16], [34.0, 888.2105263157894], [35.0, 1045.2857142857144], [36.0, 1522.4545454545455], [37.0, 2090.3], [38.0, 3796.857142857143], [39.0, 3931.25], [40.0, 3790.2], [41.0, 2796.4], [42.0, 2373.0], [43.0, 2937.0], [44.0, 1519.5], [47.0, 1345.0], [46.0, 5397.5], [49.0, 5172.5], [48.0, 6237.0], [50.0, 6370.8], [51.0, 6091.2], [53.0, 5558.0]], "isOverall": false, "label": "-0", "isController": false}, {"data": [[11.157499999999988, 561.7908333333344]], "isOverall": false, "label": "-0-Aggregated", "isController": false}, {"data": [[3.0, 10378.333333333334], [4.0, 1459.2258064516132], [5.0, 1350.6060877350037], [6.0, 1662.3245283018875], [7.0, 1939.8236272878537], [8.0, 2241.680459770115], [9.0, 2561.147826086961], [10.0, 2895.4563106796118], [11.0, 3151.814432989691], [12.0, 3422.6153846153848], [13.0, 3699.248868778279], [14.0, 4048.7908163265315], [15.0, 4280.074626865674], [16.0, 4664.409090909092], [17.0, 4748.856115107915], [18.0, 5311.4285714285725], [19.0, 7142.8117647058825], [20.0, 8440.133333333333], [21.0, 5682.021276595743], [22.0, 6537.659090909091], [23.0, 6046.468085106381], [24.0, 7818.199999999999], [25.0, 7637.166666666666], [26.0, 7288.687500000001], [27.0, 7334.666666666665], [28.0, 8942.256410256414], [29.0, 7260.114285714286], [30.0, 8313.02222222222], [31.0, 8103.666666666667], [33.0, 8657.049999999997], [32.0, 6602.76], [34.0, 6945.000000000001], [35.0, 8662.714285714286], [36.0, 11076.454545454546], [37.0, 8597.7], [38.0, 10963.142857142857], [39.0, 11767.5], [40.0, 12373.8], [41.0, 11192.2], [42.0, 11975.5], [43.0, 12098.0], [44.0, 9213.5], [47.0, 8798.0], [46.0, 13398.0], [49.0, 15144.0], [48.0, 14194.0], [50.0, 13933.0], [51.0, 14847.6], [53.0, 15429.0]], "isOverall": false, "label": "EMPTY_SERIE_NAME", "isController": false}, {"data": [[11.157499999999988, 3200.0274999999915]], "isOverall": false, "label": "EMPTY_SERIE_NAME-Aggregated", "isController": false}, {"data": [[3.0, 9693.333333333334], [4.0, 984.8709677419356], [5.0, 948.851387645478], [6.0, 1217.1471698113196], [7.0, 1478.1331114808643], [8.0, 1774.393103448275], [9.0, 2076.57391304348], [10.0, 2412.3721682847904], [11.0, 2667.360824742267], [12.0, 2895.607692307692], [13.0, 3179.20814479638], [14.0, 3496.9744897959185], [15.0, 3663.1592039801], [16.0, 3953.5113636363626], [17.0, 3986.8129496402876], [18.0, 4533.499999999999], [19.0, 6178.470588235294], [20.0, 7412.799999999998], [21.0, 4737.297872340425], [22.0, 5745.159090909089], [23.0, 5219.212765957449], [24.0, 7106.509090909089], [25.0, 6952.98148148148], [26.0, 6495.000000000001], [27.0, 6402.074074074073], [28.0, 8230.897435897437], [29.0, 6532.714285714286], [30.0, 7484.377777777777], [31.0, 7464.416666666666], [33.0, 7981.5], [32.0, 5933.799999999999], [34.0, 6056.210526315789], [35.0, 7616.571428571428], [36.0, 9553.818181818182], [37.0, 6506.2], [38.0, 7165.714285714285], [39.0, 7836.5], [40.0, 8583.8], [41.0, 8395.8], [42.0, 9602.0], [43.0, 9160.6], [44.0, 7694.0], [47.0, 7452.0], [46.0, 8000.0], [49.0, 9971.5], [48.0, 7957.0], [50.0, 7562.0], [51.0, 8756.0], [53.0, 9870.5]], "isOverall": false, "label": "-1", "isController": false}, {"data": [[11.157499999999988, 2637.2731666666596]], "isOverall": false, "label": "-1-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 53.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 686.75, "minX": 1.71838512E12, "maxY": 44474.75, "series": [{"data": [[1.71838596E12, 42431.86666666667], [1.71838566E12, 44315.4], [1.71838656E12, 41829.05], [1.71838626E12, 40984.98333333333], [1.71838668E12, 43934.7], [1.71838536E12, 43456.816666666666], [1.71838638E12, 42233.13333333333], [1.71838548E12, 41208.583333333336], [1.71838518E12, 42643.03333333333], [1.71838608E12, 43462.833333333336], [1.71838578E12, 42040.21666666667], [1.7183862E12, 44276.01666666667], [1.7183859E12, 42444.1], [1.7183868E12, 40804.5], [1.7183865E12, 40382.166666666664], [1.7183853E12, 41816.816666666666], [1.71838692E12, 28345.866666666665], [1.71838662E12, 42170.76666666667], [1.7183856E12, 39058.23333333333], [1.71838572E12, 44474.75], [1.71838542E12, 42239.15], [1.71838632E12, 43475.066666666666], [1.71838602E12, 40798.48333333333], [1.71838644E12, 42438.083333333336], [1.71838512E12, 17172.683333333334], [1.71838614E12, 40189.45], [1.71838674E12, 41810.6], [1.71838686E12, 39984.5], [1.71838584E12, 42028.183333333334], [1.71838524E12, 42443.7], [1.71838554E12, 40592.933333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.71838596E12, 1644.1], [1.71838566E12, 1713.8], [1.71838656E12, 1629.75], [1.71838626E12, 1596.95], [1.71838668E12, 1709.7], [1.71838536E12, 1674.85], [1.71838638E12, 1640.0], [1.71838548E12, 1609.25], [1.71838518E12, 1652.3], [1.71838608E12, 1676.9], [1.71838578E12, 1637.95], [1.7183862E12, 1699.45], [1.7183859E12, 1648.2], [1.7183868E12, 1599.0], [1.7183865E12, 1582.6], [1.7183853E12, 1625.65], [1.71838692E12, 1053.7], [1.71838662E12, 1619.5], [1.7183856E12, 1578.5], [1.71838572E12, 1703.55], [1.71838542E12, 1642.05], [1.71838632E12, 1681.0], [1.71838602E12, 1596.95], [1.71838644E12, 1646.15], [1.71838512E12, 686.75], [1.71838614E12, 1580.55], [1.71838674E12, 1623.6], [1.71838686E12, 1574.4], [1.71838584E12, 1633.85], [1.71838524E12, 1648.2], [1.71838554E12, 1590.8]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71838692E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 400.04347826086956, "minX": 1.71838512E12, "maxY": 7294.103773584908, "series": [{"data": [[1.71838596E12, 417.6884422110553], [1.71838566E12, 430.1199999999999], [1.71838656E12, 1134.6865671641792], [1.71838626E12, 757.8477157360404], [1.71838668E12, 782.2523809523808], [1.71838536E12, 433.1909547738696], [1.71838638E12, 444.34499999999997], [1.71838548E12, 414.0799999999999], [1.71838518E12, 408.77499999999986], [1.71838608E12, 420.35999999999996], [1.71838578E12, 404.9009900990099], [1.7183862E12, 585.939698492462], [1.7183859E12, 431.1393034825871], [1.7183868E12, 577.054726368159], [1.7183865E12, 551.0301507537687], [1.7183853E12, 459.58291457286435], [1.71838692E12, 696.3944954128443], [1.71838662E12, 1479.636842105262], [1.7183856E12, 471.805], [1.71838572E12, 405.89898989898995], [1.71838542E12, 455.04975124378086], [1.71838632E12, 778.8415841584157], [1.71838602E12, 768.7400000000001], [1.71838644E12, 433.3549999999999], [1.71838512E12, 400.04347826086956], [1.71838614E12, 438.36318407960175], [1.71838674E12, 502.21717171717137], [1.71838686E12, 681.348258706468], [1.71838584E12, 419.85499999999985], [1.71838524E12, 423.19900497512435], [1.71838554E12, 413.8800000000001]], "isOverall": false, "label": "-0", "isController": false}, {"data": [[1.71838596E12, 1662.5771144278608], [1.71838566E12, 7294.103773584908], [1.71838656E12, 5232.858585858586], [1.71838626E12, 3188.1340206185578], [1.71838668E12, 3839.8942307692314], [1.71838536E12, 2380.6067961165063], [1.71838638E12, 2168.5600000000004], [1.71838548E12, 2742.5384615384596], [1.71838518E12, 3927.752475247521], [1.71838608E12, 1762.6990291262146], [1.71838578E12, 1514.8492462311563], [1.7183862E12, 4320.276190476191], [1.7183859E12, 1846.7810945273638], [1.7183868E12, 3134.9222797927455], [1.7183865E12, 2478.492146596858], [1.7183853E12, 2332.41414141414], [1.71838692E12, 5887.28148148148], [1.71838662E12, 6160.355], [1.7183856E12, 6759.894736842104], [1.71838572E12, 2037.6113744075835], [1.71838542E12, 1952.819999999999], [1.71838632E12, 3839.5339805825247], [1.71838602E12, 2819.264248704664], [1.71838644E12, 1860.6119402985069], [1.71838512E12, 2387.6790123456794], [1.71838614E12, 2264.1157894736843], [1.71838674E12, 2275.2171717171714], [1.71838686E12, 4116.449735449737], [1.71838584E12, 2309.8090452261304], [1.71838524E12, 2368.532338308458], [1.71838554E12, 2615.328125000002]], "isOverall": false, "label": "EMPTY_SERIE_NAME", "isController": false}, {"data": [[1.71838596E12, 1245.233830845771], [1.71838566E12, 6853.1037735849], [1.71838656E12, 4060.4545454545496], [1.71838626E12, 2472.0567010309283], [1.71838668E12, 3018.677884615384], [1.71838536E12, 1936.5048543689338], [1.71838638E12, 1724.7100000000007], [1.71838548E12, 2326.5692307692298], [1.71838518E12, 3518.460396039602], [1.71838608E12, 1349.223300970873], [1.71838578E12, 1108.628140703517], [1.7183862E12, 3747.5999999999995], [1.7183859E12, 1415.0447761194025], [1.7183868E12, 2579.196891191711], [1.7183865E12, 1973.6806282722514], [1.7183853E12, 1882.9292929292922], [1.71838692E12, 5246.866666666667], [1.71838662E12, 4743.475], [1.7183856E12, 6301.5], [1.71838572E12, 1625.6350710900472], [1.71838542E12, 1496.3699999999997], [1.71838632E12, 3016.0825242718442], [1.71838602E12, 2039.0621761658024], [1.71838644E12, 1425.7761194029845], [1.71838512E12, 1984.740740740741], [1.71838614E12, 1812.5], [1.71838674E12, 1774.1868686868693], [1.71838686E12, 3382.179894179893], [1.71838584E12, 1889.231155778894], [1.71838524E12, 1945.7313432835845], [1.71838554E12, 2200.5]], "isOverall": false, "label": "-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71838692E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 399.7608695652174, "minX": 1.71838512E12, "maxY": 6853.051886792456, "series": [{"data": [[1.71838596E12, 417.67839195979906], [1.71838566E12, 430.1000000000001], [1.71838656E12, 1134.6865671641792], [1.71838626E12, 757.8426395939084], [1.71838668E12, 782.2523809523808], [1.71838536E12, 433.1507537688442], [1.71838638E12, 444.3349999999999], [1.71838548E12, 414.025], [1.71838518E12, 408.7349999999997], [1.71838608E12, 420.35999999999996], [1.71838578E12, 404.7673267326733], [1.7183862E12, 585.9145728643215], [1.7183859E12, 431.0945273631838], [1.7183868E12, 577.054726368159], [1.7183865E12, 551.0251256281406], [1.7183853E12, 459.5577889447236], [1.71838692E12, 696.3853211009173], [1.71838662E12, 1479.626315789473], [1.7183856E12, 471.785], [1.71838572E12, 405.868686868687], [1.71838542E12, 455.0149253731342], [1.71838632E12, 778.8316831683167], [1.71838602E12, 768.725], [1.71838644E12, 433.34499999999997], [1.71838512E12, 399.7608695652174], [1.71838614E12, 438.35820895522374], [1.71838674E12, 502.21212121212073], [1.71838686E12, 681.3383084577117], [1.71838584E12, 419.80500000000006], [1.71838524E12, 423.16417910447774], [1.71838554E12, 413.84]], "isOverall": false, "label": "-0", "isController": false}, {"data": [[1.71838596E12, 416.6567164179106], [1.71838566E12, 440.54245283018855], [1.71838656E12, 1171.3333333333328], [1.71838626E12, 714.2319587628868], [1.71838668E12, 819.6971153846158], [1.71838536E12, 442.91747572815524], [1.71838638E12, 443.3000000000001], [1.71838548E12, 414.9128205128204], [1.71838518E12, 408.50990099009914], [1.71838608E12, 412.6796116504854], [1.71838578E12, 404.78391959799], [1.7183862E12, 571.7571428571432], [1.7183859E12, 431.21393034825877], [1.7183868E12, 553.0725388601039], [1.7183865E12, 503.890052356021], [1.7183853E12, 448.80303030303014], [1.71838692E12, 639.985185185185], [1.71838662E12, 1416.4650000000001], [1.7183856E12, 457.3210526315788], [1.71838572E12, 409.876777251185], [1.71838542E12, 455.7250000000001], [1.71838632E12, 822.723300970874], [1.71838602E12, 779.5284974093266], [1.71838644E12, 433.1044776119403], [1.71838512E12, 401.5061728395062], [1.71838614E12, 450.99473684210557], [1.71838674E12, 500.24747474747466], [1.71838686E12, 733.5079365079365], [1.71838584E12, 420.01005025125625], [1.71838524E12, 422.16915422885563], [1.71838554E12, 413.77604166666674]], "isOverall": false, "label": "EMPTY_SERIE_NAME", "isController": false}, {"data": [[1.71838596E12, 1244.960199004975], [1.71838566E12, 6853.051886792456], [1.71838656E12, 4060.348484848482], [1.71838626E12, 2471.8195876288655], [1.71838668E12, 3018.572115384617], [1.71838536E12, 1933.7427184466037], [1.71838638E12, 1724.5849999999998], [1.71838548E12, 2326.287179487178], [1.71838518E12, 3518.381188118813], [1.71838608E12, 1349.0339805825242], [1.71838578E12, 1107.7135678391965], [1.7183862E12, 3747.4523809523816], [1.7183859E12, 1414.9800995024864], [1.7183868E12, 2579.129533678757], [1.7183865E12, 1973.5445026178013], [1.7183853E12, 1882.8282828282836], [1.71838692E12, 5246.859259259258], [1.71838662E12, 4743.460000000004], [1.7183856E12, 6298.973684210525], [1.71838572E12, 1625.3838862559246], [1.71838542E12, 1496.2500000000002], [1.71838632E12, 3015.9708737864066], [1.71838602E12, 2038.9015544041445], [1.71838644E12, 1424.1990049751246], [1.71838512E12, 1984.3950617283956], [1.71838614E12, 1812.415789473684], [1.71838674E12, 1774.1010101010097], [1.71838686E12, 3382.0634920634916], [1.71838584E12, 1889.1557788944722], [1.71838524E12, 1945.5870646766189], [1.71838554E12, 2200.2656249999995]], "isOverall": false, "label": "-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71838692E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 198.84736842105272, "minX": 1.71838512E12, "maxY": 1512.1212121212122, "series": [{"data": [[1.71838596E12, 208.6834170854272], [1.71838566E12, 218.68999999999997], [1.71838656E12, 602.6517412935328], [1.71838626E12, 421.4314720812184], [1.71838668E12, 450.89523809523826], [1.71838536E12, 223.5226130653267], [1.71838638E12, 219.69499999999994], [1.71838548E12, 205.94000000000005], [1.71838518E12, 207.04000000000013], [1.71838608E12, 213.67500000000004], [1.71838578E12, 205.40099009900973], [1.7183862E12, 307.3015075376883], [1.7183859E12, 218.95024875621894], [1.7183868E12, 315.5870646766169], [1.7183865E12, 297.7638190954773], [1.7183853E12, 234.35175879396982], [1.71838692E12, 368.9174311926605], [1.71838662E12, 788.1736842105258], [1.7183856E12, 204.53500000000005], [1.71838572E12, 203.77777777777783], [1.71838542E12, 233.46268656716427], [1.71838632E12, 452.1683168316833], [1.71838602E12, 405.86], [1.71838644E12, 215.63499999999993], [1.71838512E12, 204.69565217391306], [1.71838614E12, 216.65174129353233], [1.71838674E12, 255.56060606060606], [1.71838686E12, 359.77114427860704], [1.71838584E12, 206.82500000000007], [1.71838524E12, 217.66666666666674], [1.71838554E12, 209.19000000000008]], "isOverall": false, "label": "-0", "isController": false}, {"data": [[1.71838596E12, 208.17412935323384], [1.71838566E12, 218.33018867924537], [1.71838656E12, 629.4242424242424], [1.71838626E12, 399.4329896907216], [1.71838668E12, 455.75961538461513], [1.71838536E12, 229.47572815533985], [1.71838638E12, 219.49500000000006], [1.71838548E12, 206.3128205128204], [1.71838518E12, 206.78712871287132], [1.71838608E12, 208.85436893203882], [1.71838578E12, 205.4422110552764], [1.7183862E12, 301.10476190476186], [1.7183859E12, 218.99004975124387], [1.7183868E12, 292.559585492228], [1.7183865E12, 261.8952879581154], [1.7183853E12, 227.8686868686869], [1.71838692E12, 336.88888888888874], [1.71838662E12, 773.2449999999994], [1.7183856E12, 198.84736842105272], [1.71838572E12, 208.12322274881512], [1.71838542E12, 233.73000000000005], [1.71838632E12, 471.82524271844665], [1.71838602E12, 410.95854922279807], [1.71838644E12, 215.4029850746269], [1.71838512E12, 206.55555555555557], [1.71838614E12, 225.06842105263158], [1.71838674E12, 254.40404040404036], [1.71838686E12, 400.1375661375658], [1.71838584E12, 206.96482412060305], [1.71838524E12, 217.01492537313425], [1.71838554E12, 209.46354166666669]], "isOverall": false, "label": "EMPTY_SERIE_NAME", "isController": false}, {"data": [[1.71838596E12, 644.9701492537313], [1.71838566E12, 670.1650943396222], [1.71838656E12, 1512.1212121212122], [1.71838626E12, 966.484536082474], [1.71838668E12, 1044.980769230769], [1.71838536E12, 659.0194174757286], [1.71838638E12, 680.7599999999999], [1.71838548E12, 667.6102564102564], [1.71838518E12, 624.3366336633665], [1.71838608E12, 690.5485436893207], [1.71838578E12, 623.527638190955], [1.7183862E12, 848.719047619048], [1.7183859E12, 639.3880597014926], [1.7183868E12, 810.0207253886003], [1.7183865E12, 728.6544502617803], [1.7183853E12, 693.9545454545454], [1.71838692E12, 957.4962962962964], [1.71838662E12, 1420.9650000000001], [1.7183856E12, 992.8842105263151], [1.71838572E12, 615.0236966824644], [1.71838542E12, 672.195], [1.71838632E12, 962.5339805825239], [1.71838602E12, 1034.9844559585495], [1.71838644E12, 667.8258706467664], [1.71838512E12, 642.8518518518518], [1.71838614E12, 698.8210526315788], [1.71838674E12, 769.9040404040405], [1.71838686E12, 937.6772486772486], [1.71838584E12, 641.2261306532665], [1.71838524E12, 628.8905472636819], [1.71838554E12, 627.6562500000001]], "isOverall": false, "label": "-1", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71838692E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 356.0, "minX": 1.71838512E12, "maxY": 62025.0, "series": [{"data": [[1.71838596E12, 3433.0], [1.71838566E12, 62025.0], [1.71838656E12, 14791.0], [1.71838626E12, 6944.0], [1.71838668E12, 10545.0], [1.71838536E12, 5593.0], [1.71838638E12, 4867.0], [1.71838548E12, 6946.0], [1.71838518E12, 7159.0], [1.71838608E12, 12682.0], [1.71838578E12, 3492.0], [1.7183862E12, 14634.0], [1.7183859E12, 4651.0], [1.7183868E12, 7595.0], [1.7183865E12, 5549.0], [1.7183853E12, 5755.0], [1.71838692E12, 11505.0], [1.71838662E12, 20502.0], [1.7183856E12, 38458.0], [1.71838572E12, 5873.0], [1.71838542E12, 4441.0], [1.71838632E12, 9024.0], [1.71838602E12, 11197.0], [1.71838644E12, 6144.0], [1.71838512E12, 5180.0], [1.71838614E12, 5914.0], [1.71838674E12, 5394.0], [1.71838686E12, 9459.0], [1.71838584E12, 5778.0], [1.71838524E12, 5641.0], [1.71838554E12, 5848.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.71838596E12, 2021.2000000000003], [1.71838566E12, 5380.3], [1.71838656E12, 8153.800000000001], [1.71838626E12, 4165.0], [1.71838668E12, 5743.400000000001], [1.71838536E12, 3422.800000000003], [1.71838638E12, 2848.2], [1.71838548E12, 3696.0], [1.71838518E12, 4967.0], [1.71838608E12, 2083.9000000000015], [1.71838578E12, 1639.5], [1.7183862E12, 6281.0], [1.7183859E12, 2390.0], [1.7183868E12, 4000.800000000001], [1.7183865E12, 3076.8], [1.7183853E12, 3209.3999999999996], [1.71838692E12, 8631.0], [1.71838662E12, 8756.599999999999], [1.7183856E12, 8238.1], [1.71838572E12, 3039.8999999999996], [1.71838542E12, 2477.600000000003], [1.71838632E12, 5174.5], [1.71838602E12, 4047.700000000001], [1.71838644E12, 2233.7], [1.71838512E12, 3252.5], [1.71838614E12, 3098.600000000003], [1.71838674E12, 2987.0], [1.71838686E12, 5896.0], [1.71838584E12, 3455.1], [1.71838524E12, 3055.000000000001], [1.71838554E12, 3259.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.71838596E12, 3047.900000000001], [1.71838566E12, 60932.17], [1.71838656E12, 12639.559999999994], [1.71838626E12, 6074.299999999998], [1.71838668E12, 9067.010000000004], [1.71838536E12, 5015.399999999998], [1.71838638E12, 4157.47], [1.71838548E12, 5637.320000000005], [1.71838518E12, 6192.5000000000055], [1.71838608E12, 3858.03], [1.71838578E12, 2380.5200000000004], [1.7183862E12, 8263.599999999999], [1.7183859E12, 3507.2400000000007], [1.7183868E12, 5391.920000000002], [1.7183865E12, 4476.039999999999], [1.7183853E12, 4483.639999999996], [1.71838692E12, 10440.999999999996], [1.71838662E12, 15354.560000000009], [1.7183856E12, 34335.10999999998], [1.71838572E12, 4869.169999999999], [1.71838542E12, 3757.1200000000035], [1.71838632E12, 7638.0], [1.71838602E12, 6726.15], [1.71838644E12, 3927.91], [1.71838512E12, 4834.699999999999], [1.71838614E12, 4779.219999999991], [1.71838674E12, 4875.999999999997], [1.71838686E12, 8412.800000000017], [1.71838584E12, 4965.5], [1.71838524E12, 4722.1200000000035], [1.71838554E12, 4888.449999999997]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.71838596E12, 2479.099999999999], [1.71838566E12, 5917.199999999993], [1.71838656E12, 9567.5], [1.71838626E12, 4838.5999999999985], [1.71838668E12, 7073.349999999999], [1.71838536E12, 3865.0], [1.71838638E12, 3249.4999999999964], [1.71838548E12, 4308.549999999997], [1.71838518E12, 5345.75], [1.71838608E12, 2721.9500000000003], [1.71838578E12, 1831.6499999999983], [1.7183862E12, 7028.0], [1.7183859E12, 2864.2], [1.7183868E12, 4493.200000000001], [1.7183865E12, 3565.9999999999973], [1.7183853E12, 3737.2], [1.71838692E12, 9271.0], [1.71838662E12, 12073.699999999999], [1.7183856E12, 12487.199999999997], [1.71838572E12, 3830.4499999999966], [1.71838542E12, 2900.8], [1.71838632E12, 6161.0], [1.71838602E12, 5043.9], [1.71838644E12, 2663.4500000000003], [1.71838512E12, 3512.75], [1.71838614E12, 3705.2], [1.71838674E12, 3732.0], [1.71838686E12, 6915.0], [1.71838584E12, 3942.999999999999], [1.71838524E12, 3647.3999999999987], [1.71838554E12, 3694.25]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.71838596E12, 358.0], [1.71838566E12, 358.0], [1.71838656E12, 360.0], [1.71838626E12, 364.0], [1.71838668E12, 362.0], [1.71838536E12, 362.0], [1.71838638E12, 357.0], [1.71838548E12, 359.0], [1.71838518E12, 358.0], [1.71838608E12, 361.0], [1.71838578E12, 359.0], [1.7183862E12, 368.0], [1.7183859E12, 359.0], [1.7183868E12, 357.0], [1.7183865E12, 360.0], [1.7183853E12, 363.0], [1.71838692E12, 358.0], [1.71838662E12, 373.0], [1.7183856E12, 358.0], [1.71838572E12, 357.0], [1.71838542E12, 360.0], [1.71838632E12, 360.0], [1.71838602E12, 361.0], [1.71838644E12, 359.0], [1.71838512E12, 359.0], [1.71838614E12, 358.0], [1.71838674E12, 358.0], [1.71838686E12, 363.0], [1.71838584E12, 357.0], [1.71838524E12, 359.0], [1.71838554E12, 356.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.71838596E12, 1044.0], [1.71838566E12, 3528.0], [1.71838656E12, 2122.0], [1.71838626E12, 1787.0], [1.71838668E12, 1941.0], [1.71838536E12, 1373.0], [1.71838638E12, 1316.0], [1.71838548E12, 1593.0], [1.71838518E12, 2809.5], [1.71838608E12, 1056.5], [1.71838578E12, 1032.5], [1.7183862E12, 2585.0], [1.7183859E12, 1199.0], [1.7183868E12, 1854.0], [1.7183865E12, 1594.0], [1.7183853E12, 1321.0], [1.71838692E12, 3743.0], [1.71838662E12, 3197.0], [1.7183856E12, 4157.0], [1.71838572E12, 1197.5], [1.71838542E12, 1249.0], [1.71838632E12, 2099.5], [1.71838602E12, 1449.5], [1.71838644E12, 1216.5], [1.71838512E12, 1335.0], [1.71838614E12, 1318.0], [1.71838674E12, 1315.5], [1.71838686E12, 2308.0], [1.71838584E12, 1298.0], [1.71838524E12, 1505.0], [1.71838554E12, 1655.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71838692E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 442.0, "minX": 1.0, "maxY": 62011.5, "series": [{"data": [[2.0, 685.0], [42.0, 8634.5], [3.0, 442.0], [4.0, 496.5], [5.0, 918.0], [6.0, 880.5], [7.0, 1219.5], [8.0, 1190.5], [9.0, 1234.5], [10.0, 1276.0], [11.0, 1317.0], [12.0, 1265.0], [13.0, 1649.0], [14.0, 1511.0], [15.0, 2118.0], [16.0, 2261.5], [1.0, 583.0], [17.0, 2476.0], [18.0, 2820.0], [19.0, 2722.0], [20.0, 2960.5], [21.0, 3703.0], [22.0, 3495.0], [23.0, 3855.0], [24.0, 4972.5], [25.0, 2615.0], [26.0, 3050.0], [30.0, 4958.0], [31.0, 7167.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9.0, 4003.0], [10.0, 1015.5], [11.0, 30978.5], [24.0, 2967.0], [13.0, 1245.0], [7.0, 62011.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 42.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 420.0, "minX": 1.0, "maxY": 31101.0, "series": [{"data": [[2.0, 683.0], [42.0, 5025.5], [3.0, 427.5], [4.0, 429.5], [5.0, 482.0], [6.0, 459.0], [7.0, 420.0], [8.0, 449.5], [9.0, 422.5], [10.0, 428.0], [11.0, 455.0], [12.0, 442.5], [13.0, 472.0], [14.0, 465.5], [15.0, 578.0], [16.0, 592.5], [1.0, 583.0], [17.0, 897.5], [18.0, 1033.0], [19.0, 1261.5], [20.0, 1104.0], [21.0, 1585.0], [22.0, 811.5], [23.0, 1599.0], [24.0, 1934.5], [25.0, 899.0], [26.0, 1467.5], [30.0, 1333.0], [31.0, 1950.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9.0, 2175.0], [10.0, 575.5], [11.0, 565.5], [24.0, 1411.0], [13.0, 800.5], [7.0, 31101.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 42.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 4.666666666666667, "minX": 1.71838512E12, "maxY": 10.133333333333333, "series": [{"data": [[1.71838596E12, 9.983333333333333], [1.71838566E12, 10.0], [1.71838656E12, 10.016666666666667], [1.71838626E12, 9.95], [1.71838668E12, 10.133333333333333], [1.71838536E12, 9.983333333333333], [1.71838638E12, 10.0], [1.71838548E12, 10.0], [1.71838518E12, 10.0], [1.71838608E12, 10.0], [1.71838578E12, 10.033333333333333], [1.7183862E12, 9.983333333333333], [1.7183859E12, 10.016666666666667], [1.7183868E12, 10.016666666666667], [1.7183865E12, 9.983333333333333], [1.7183853E12, 9.95], [1.71838692E12, 5.416666666666667], [1.71838662E12, 9.833333333333334], [1.7183856E12, 10.0], [1.71838572E12, 9.966666666666667], [1.71838542E12, 10.016666666666667], [1.71838632E12, 10.0], [1.71838602E12, 10.0], [1.71838644E12, 10.0], [1.71838512E12, 4.666666666666667], [1.71838614E12, 10.016666666666667], [1.71838674E12, 9.966666666666667], [1.71838686E12, 10.016666666666667], [1.71838584E12, 10.033333333333333], [1.71838524E12, 10.016666666666667], [1.71838554E12, 10.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71838692E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.71838512E12, "maxY": 7.033333333333333, "series": [{"data": [[1.71838596E12, 6.7], [1.71838566E12, 7.0], [1.71838656E12, 6.6], [1.71838626E12, 6.466666666666667], [1.71838668E12, 6.933333333333334], [1.71838536E12, 6.866666666666666], [1.71838638E12, 6.666666666666667], [1.71838548E12, 6.5], [1.71838518E12, 6.733333333333333], [1.71838608E12, 6.866666666666666], [1.71838578E12, 6.633333333333334], [1.7183862E12, 7.0], [1.7183859E12, 6.7], [1.7183868E12, 6.433333333333334], [1.7183865E12, 6.366666666666666], [1.7183853E12, 6.6], [1.71838692E12, 4.5], [1.71838662E12, 6.666666666666667], [1.7183856E12, 6.133333333333334], [1.71838572E12, 7.033333333333333], [1.71838542E12, 6.666666666666667], [1.71838632E12, 6.866666666666666], [1.71838602E12, 6.433333333333334], [1.71838644E12, 6.7], [1.71838512E12, 2.7], [1.71838614E12, 6.333333333333333], [1.71838674E12, 6.6], [1.71838686E12, 6.3], [1.71838584E12, 6.633333333333334], [1.71838524E12, 6.7], [1.71838554E12, 6.4]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.71838596E12, 3.316666666666667], [1.71838566E12, 3.3333333333333335], [1.71838656E12, 3.35], [1.71838626E12, 3.283333333333333], [1.71838668E12, 3.5], [1.71838536E12, 3.316666666666667], [1.71838638E12, 3.3333333333333335], [1.71838548E12, 3.3333333333333335], [1.71838518E12, 3.3333333333333335], [1.71838608E12, 3.3333333333333335], [1.71838578E12, 3.3666666666666667], [1.7183862E12, 3.316666666666667], [1.7183859E12, 3.35], [1.7183868E12, 3.35], [1.7183865E12, 3.316666666666667], [1.7183853E12, 3.316666666666667], [1.71838692E12, 1.8166666666666667], [1.71838662E12, 3.1666666666666665], [1.7183856E12, 3.3333333333333335], [1.71838572E12, 3.3], [1.71838542E12, 3.35], [1.71838632E12, 3.3666666666666667], [1.71838602E12, 3.3333333333333335], [1.71838644E12, 3.3333333333333335], [1.71838512E12, 1.5333333333333334], [1.71838614E12, 3.35], [1.71838674E12, 3.3], [1.71838686E12, 3.35], [1.71838584E12, 3.3333333333333335], [1.71838524E12, 3.35], [1.71838554E12, 3.3333333333333335]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.7183856E12, 0.2]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.71838566E12, 0.06666666666666667]], "isOverall": false, "label": "404", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.71838692E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.71838512E12, "maxY": 3.5166666666666666, "series": [{"data": [[1.71838566E12, 0.03333333333333333], [1.7183856E12, 0.1]], "isOverall": false, "label": "-1-failure", "isController": false}, {"data": [[1.71838596E12, 3.35], [1.71838566E12, 3.5], [1.71838656E12, 3.3], [1.71838626E12, 3.2333333333333334], [1.71838668E12, 3.466666666666667], [1.71838536E12, 3.433333333333333], [1.71838638E12, 3.3333333333333335], [1.71838548E12, 3.25], [1.71838518E12, 3.3666666666666667], [1.71838608E12, 3.433333333333333], [1.71838578E12, 3.316666666666667], [1.7183862E12, 3.5], [1.7183859E12, 3.35], [1.7183868E12, 3.216666666666667], [1.7183865E12, 3.183333333333333], [1.7183853E12, 3.3], [1.71838692E12, 2.25], [1.71838662E12, 3.3333333333333335], [1.7183856E12, 3.066666666666667], [1.71838572E12, 3.5166666666666666], [1.71838542E12, 3.3333333333333335], [1.71838632E12, 3.433333333333333], [1.71838602E12, 3.216666666666667], [1.71838644E12, 3.35], [1.71838512E12, 1.35], [1.71838614E12, 3.1666666666666665], [1.71838674E12, 3.3], [1.71838686E12, 3.15], [1.71838584E12, 3.316666666666667], [1.71838524E12, 3.35], [1.71838554E12, 3.2]], "isOverall": false, "label": "-1-success", "isController": false}, {"data": [[1.71838596E12, 3.35], [1.71838566E12, 3.5], [1.71838656E12, 3.3], [1.71838626E12, 3.2333333333333334], [1.71838668E12, 3.466666666666667], [1.71838536E12, 3.433333333333333], [1.71838638E12, 3.3333333333333335], [1.71838548E12, 3.25], [1.71838518E12, 3.3666666666666667], [1.71838608E12, 3.433333333333333], [1.71838578E12, 3.316666666666667], [1.7183862E12, 3.5], [1.7183859E12, 3.35], [1.7183868E12, 3.216666666666667], [1.7183865E12, 3.183333333333333], [1.7183853E12, 3.3], [1.71838692E12, 2.25], [1.71838662E12, 3.3333333333333335], [1.7183856E12, 3.066666666666667], [1.71838572E12, 3.5166666666666666], [1.71838542E12, 3.3333333333333335], [1.71838632E12, 3.433333333333333], [1.71838602E12, 3.216666666666667], [1.71838644E12, 3.35], [1.71838512E12, 1.35], [1.71838614E12, 3.1666666666666665], [1.71838674E12, 3.3], [1.71838686E12, 3.15], [1.71838584E12, 3.316666666666667], [1.71838524E12, 3.35], [1.71838554E12, 3.2]], "isOverall": false, "label": "-success", "isController": false}, {"data": [[1.71838566E12, 0.03333333333333333], [1.7183856E12, 0.1]], "isOverall": false, "label": "-failure", "isController": false}, {"data": [[1.71838596E12, 3.316666666666667], [1.71838566E12, 3.3333333333333335], [1.71838656E12, 3.35], [1.71838626E12, 3.283333333333333], [1.71838668E12, 3.5], [1.71838536E12, 3.316666666666667], [1.71838638E12, 3.3333333333333335], [1.71838548E12, 3.3333333333333335], [1.71838518E12, 3.3333333333333335], [1.71838608E12, 3.3333333333333335], [1.71838578E12, 3.3666666666666667], [1.7183862E12, 3.316666666666667], [1.7183859E12, 3.35], [1.7183868E12, 3.35], [1.7183865E12, 3.316666666666667], [1.7183853E12, 3.316666666666667], [1.71838692E12, 1.8166666666666667], [1.71838662E12, 3.1666666666666665], [1.7183856E12, 3.3333333333333335], [1.71838572E12, 3.3], [1.71838542E12, 3.35], [1.71838632E12, 3.3666666666666667], [1.71838602E12, 3.3333333333333335], [1.71838644E12, 3.3333333333333335], [1.71838512E12, 1.5333333333333334], [1.71838614E12, 3.35], [1.71838674E12, 3.3], [1.71838686E12, 3.35], [1.71838584E12, 3.3333333333333335], [1.71838524E12, 3.35], [1.71838554E12, 3.3333333333333335]], "isOverall": false, "label": "-0-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71838692E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.71838512E12, "maxY": 10.433333333333334, "series": [{"data": [[1.71838596E12, 10.016666666666667], [1.71838566E12, 10.333333333333334], [1.71838656E12, 9.95], [1.71838626E12, 9.75], [1.71838668E12, 10.433333333333334], [1.71838536E12, 10.183333333333334], [1.71838638E12, 10.0], [1.71838548E12, 9.833333333333334], [1.71838518E12, 10.066666666666666], [1.71838608E12, 10.2], [1.71838578E12, 10.0], [1.7183862E12, 10.316666666666666], [1.7183859E12, 10.05], [1.7183868E12, 9.783333333333333], [1.7183865E12, 9.683333333333334], [1.7183853E12, 9.916666666666666], [1.71838692E12, 6.316666666666666], [1.71838662E12, 9.833333333333334], [1.7183856E12, 9.466666666666667], [1.71838572E12, 10.333333333333334], [1.71838542E12, 10.016666666666667], [1.71838632E12, 10.233333333333333], [1.71838602E12, 9.766666666666667], [1.71838644E12, 10.033333333333333], [1.71838512E12, 4.233333333333333], [1.71838614E12, 9.683333333333334], [1.71838674E12, 9.9], [1.71838686E12, 9.65], [1.71838584E12, 9.966666666666667], [1.71838524E12, 10.05], [1.71838554E12, 9.733333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.71838566E12, 0.06666666666666667], [1.7183856E12, 0.2]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.71838692E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

